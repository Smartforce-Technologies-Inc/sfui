{"version":3,"sources":["App/ButtonsView/ButtonsView.tsx","App/CheckboxesView/CheckboxesView.tsx","App/DatePickerView/DatePickerView.tsx","App/IconButtonView/IconButtonView.tsx","App/LinksView/LinksView.tsx","App/MultiSelectView/MultiSelectView.tsx","App/RadioView/RadioView.tsx","App/RadioGroupView/RadioGroupView.tsx","App/SwitchesView/SwitchesView.tsx","App/SelectView/SelectView.tsx","App/TextFieldsView/TextFieldsView.tsx","App/TextFieldsMultilineView/TextFieldsMultilineView.tsx","App/App.tsx","index.tsx","../../src/SFColors/SFColors.tsx","../../src/Components/SFButton/CustomButtons/ButtonMixin.tsx","../../src/Components/SFButton/CustomButtons/BlueButton.tsx","../../src/Components/SFButton/CustomButtons/RedButton.tsx","../../src/Components/SFButton/CustomButtons/GreyButton.tsx","../../src/Components/SFButton/SFButton.tsx","../../src/Components/SFPaper/SFPaper.tsx","../../src/Components/SFFormControlLabel/SFFormControlLabel.tsx","../../src/Components/SFCard/SFCard.tsx","../../node_modules/icomoon-react/build/src/IcomoonReact/IcomoonReact.js","../../node_modules/icomoon-react/build/src/index.js","../../src/Components/SFIcon/SFIcon.tsx","../../src/Components/SFCheckbox/SFCheckbox.tsx","../../src/helpers/index.ts","../../src/Components/SFDatePicker/SFDatePicker.tsx","../../src/Components/SFIconButton/SFIconButton.tsx","../../src/Components/SFLink/SFLink.tsx","../../src/Components/SFTextField/SFTextField.tsx","../../src/Components/SFMultiSelect/SFMultiSelect.tsx","../../src/Components/SFRadioGroup/SFRadio/SFRadio.tsx","../../src/Components/SFRadioGroup/SFRadioGroup.tsx","../../src/Components/SFSelect/SFSelect.tsx","../../src/Components/SFSwitch/SFSwitch.tsx","../../src/SFTheme/CommonThemeOptions.tsx","../../src/Components/SFTable/SFTable.tsx","../../src/SFTheme/NightTheme.tsx","../../src/SFTheme/DayTheme.tsx","../../src/SFTheme/SFTheme.tsx"],"names":["SFButtonsView","className","renderButtonsColumn","size","sfColor","style","textTransform","variant","disabled","SFCheckboxesView","label","checked","SFDatePickerView","value","Date","now","error","helperText","SFIconButtonView","sfIcon","sfSize","SFLinksView","color","SFMultiSelectView","options","defaultValue","SFRadioView","SFRadioGroupView","SFSwitchesView","SFSelectView","SFTextFieldsView","SFTextFieldsMultilineView","multiline","App","useState","nightMode","setNightMode","prefersDarkMode","useSFMediaQuery","switchLabel","theme","createSFTheme","injectFirst","backgroundColor","palette","background","default","onChange","borderColor","primary","main","ReactDOM","render","document","getElementById","SFBlue","SFRed","SFGrey","A100","A200","A400","A700","50","100","200","300","400","500","600","700","800","900","SFBlueMainLight","SFBlueMainDark","SFRedMainLight","SFRedMainDark","SFSurfaceLight","SFSurfaceDark","ButtonMixin","sfButtonConfig","root","backgroundColorHover","backgroundColorActive","outlined","text","border","BlueButton","contained","light","backgroundColorDisabled","dark","colorHover","colorActive","borderColorHover","borderColorActive","RedButton","GreyButton","SFButton","disableRipple","disableElevation","props","ButtonInnerProps","result","getButtonInnerProps","ButtonInnerStyle","padding","fontSize","lineHeight","height","button","StyledPaper","borderRadius","SFPaper","elevation","React","StyledFromControlLabel","makeStyles","position","display","justifyContent","alignItems","flexDirection","margin","SFFormControlLabel","__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__importDefault","mod","__esModule","defineProperty","exports","iconList","react_1","require$$0","iconSet","list","icons","forEach","icon","push","properties","name","split","_a","_b","_c","rest","styles","iconObj","currentIcon","find","iconEl","includes","createElement","svg","width","viewBox","xmlns","paths","map","path","index","attrs","key","d","console","warn","getSvg","verticalAlign","fill","IcomoonReact","displayName","IcomoonReact_2","IcomoonReact_1","enumerable","get","SFIcon","colorDefault","useTheme","IconSet","StyledCheckbox","colorPrimary","SFCheckbox","iconCheckedColor","getIconCheckedColor","iconUncheckedColor","getIconUncheckedColor","control","checkedIcon","hexToRgba","hex","opacity","exec","parseInt","useButtonBackgrounds","createStyles","usePopOverStyle","paper","marginTop","StyledDatePicker","boxSizing","content","fontWeight","transform","SFDatePicker","selectedDate","handleDateChange","popOverStyle","arrowStyle","containerRef","fullWidth","utils","MomentUtils","ref","disableToolbar","inputVariant","format","PopoverProps","classes","container","anchorOrigin","vertical","horizontal","transformOrigin","InputProps","readOnly","rightArrowButtonProps","rightArrowIcon","leftArrowButtonProps","leftArrowIcon","keyboardIcon","StyledIconButton","SFIconButton","isThemeLight","disabledColor","colorPicked","iconButtonInnerProps","getIconButtonInnerProps","StyledLink","cursor","getLinkSize","SFLink","StyledTextField","SFTextField","rows","StyledSelect","right","pointerEvents","top","StyledMenuItem","useMenuStyles","SFMultiSelect","valueInit","selected","setSelected","customMenuStyles","isChecked","selectedValues","option","select","SelectProps","multiple","MenuProps","autoFocus","disableAutoFocusItem","event","renderValue","IconComponent","StyledRadio","SFRadio","SFRadioGroup","opt","SFSelect","StyledSwitch","switchBase","left","thumb","boxShadow","track","SFSwitch","CommonThemeOptions","colorSecondary","forwardRef","MuiButtonBase","shape","overrides","MuiFormControlLabel","marginRight","MuiIconButton","MuiButton","MuiPaper","elevation1","elevation2","elevation3","elevation4","elevation6","elevation8","elevation9","elevation12","elevation16","elevation24","type","secondary","grey","action","active","activatedOpacity","hover","hoverOpacity","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","NightTheme","createMuiTheme","DayTheme"],"mappings":"6MAIMA,EAAgB,WACpB,OACE,sBAAKC,UAAU,uBAAf,UACGC,EAAoB,SACpBA,EAAoB,UACpBA,EAAoB,aAKrBA,EAAsB,SAC1BC,GAEA,OACE,sBAAKF,UAAU,uBAAf,UACE,cAAC,IAAD,CAAUG,QAAQ,OAAOD,KAAMA,EAA/B,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,OAAOG,QAAQ,WAAWJ,KAAMA,EAAlD,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,OAAOG,QAAQ,OAAOJ,KAAMA,EAA9C,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,OAAOD,KAAMA,EAA/B,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,OAAOG,QAAQ,WAAWJ,KAAMA,EAAlD,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,OAAOG,QAAQ,OAAOJ,KAAMA,EAA9C,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,MAAMD,KAAMA,EAA9B,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,MAAMG,QAAQ,WAAWJ,KAAMA,EAAjD,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,MAAMG,QAAQ,OAAOJ,KAAMA,EAA7C,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,OAAOI,UAAU,EAAML,KAAMA,EAA/C,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,OAAOG,QAAQ,WAAWC,UAAU,EAAML,KAAMA,EAAlE,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,MAEjD,cAAC,IAAD,CAAUC,QAAQ,OAAOG,QAAQ,OAAOC,UAAU,EAAML,KAAMA,EAA9D,SACE,sBAAME,MAAO,CAAEC,cAAe,cAA9B,SAA+CH,UCjDjDM,EAAmB,WACvB,OACE,sBAAKR,UAAU,qBAAf,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAYS,MAAM,UAClB,cAAC,IAAD,CAAYF,UAAQ,IACpB,cAAC,IAAD,CAAYE,MAAM,QAAQF,UAAQ,IAClC,cAAC,IAAD,CAAYG,SAAO,IACnB,cAAC,IAAD,CAAYD,MAAM,QAAQC,SAAO,IACjC,cAAC,IAAD,CAAYA,SAAO,EAACH,UAAQ,IAC5B,cAAC,IAAD,CAAYE,MAAM,QAAQC,SAAO,EAACH,UAAQ,QCV1CI,EAAmB,WACvB,OACE,sBAAKX,UAAU,qBAAf,UACE,cAAC,IAAD,CAAcS,MAAM,UACpB,cAAC,IAAD,CAAcA,MAAM,QAAQG,MAAOC,KAAKC,QACxC,cAAC,IAAD,CAAcL,MAAM,QAAQG,MAAOC,KAAKC,MAAOP,UAAQ,IACvD,cAAC,IAAD,CAAcE,MAAM,QAAQG,MAAOC,KAAKC,MAAOC,OAAK,IACpD,cAAC,IAAD,CACEN,MAAM,QACNG,MAAOC,KAAKC,MACZE,WAAW,uBCVbC,EAAmB,WACvB,OACE,sBAAKjB,UAAU,sBAAf,UACE,cAAC,IAAD,CAAckB,OAAO,YAAYC,OAAO,SACxC,cAAC,IAAD,CAAcD,OAAO,YAAYC,OAAO,UACxC,cAAC,IAAD,CAAcD,OAAO,YAAYC,OAAO,WACxC,cAAC,IAAD,CAAcD,OAAO,YAAYC,OAAO,UACxC,cAAC,IAAD,CAAcD,OAAO,YAAYC,OAAO,OAAOZ,UAAQ,IACvD,cAAC,IAAD,CAAcW,OAAO,YAAYC,OAAO,QAAQZ,UAAQ,IACxD,cAAC,IAAD,CAAcW,OAAO,YAAYC,OAAO,SAASZ,UAAQ,IACzD,cAAC,IAAD,CAAcW,OAAO,YAAYC,OAAO,QAAQZ,UAAQ,QCVxDa,EAAc,WAClB,OACE,sBAAKpB,UAAU,qBAAf,UACE,cAAC,IAAD,CAAQmB,OAAO,SAASE,MAAM,UAA9B,iCAGA,cAAC,IAAD,CAAQF,OAAO,QAAQE,MAAM,UAA7B,iCAGA,cAAC,IAAD,CAAQF,OAAO,SAAf,iCACA,cAAC,IAAD,CAAQA,OAAO,QAAf,qCCOAG,EAAoB,WACxB,OACE,sBAAKtB,UAAU,qBAAf,UACE,cAAC,IAAD,CAAeS,MAAM,QAAQc,QAnB1B,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,uBAQ6CY,aAAc,KAClE,cAAC,IAAD,CACEf,MAAM,QACNc,QAtBC,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,uBAYLY,aAAc,CAAC,sBAEjB,cAAC,IAAD,CACEf,MAAM,QACNc,QA3BC,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,uBAiBLY,aAAc,CAAC,oBACfjB,UAAQ,IAEV,cAAC,IAAD,CACEE,MAAM,QACNc,QAjCC,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,uBAuBLY,aAAc,CAAC,oBACfT,OAAK,IAEP,cAAC,IAAD,CACEN,MAAM,QACNc,QAvCC,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,uBA6BLY,aAAc,CAAC,oBACfR,WAAW,uBC1CbS,EAAc,WAClB,OACE,sBAAKzB,UAAU,qBAAf,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAASS,MAAM,UACf,cAAC,IAAD,CAASF,UAAQ,IACjB,cAAC,IAAD,CAASE,MAAM,QAAQF,UAAQ,IAC/B,cAAC,IAAD,CAASG,SAAO,IAChB,cAAC,IAAD,CAASD,MAAM,QAAQC,SAAO,IAC9B,cAAC,IAAD,CAASA,SAAO,EAACH,UAAQ,IACzB,cAAC,IAAD,CAASE,MAAM,QAAQC,SAAO,EAACH,UAAQ,QCVvCmB,EAAmB,WAMvB,OACE,qBAAK1B,UAAU,iBAAf,SACE,cAAC,IAAD,CAAcS,MAAM,UAAUe,aAAc,OAAQD,QAPjB,CACrC,CAAEX,MAAO,OAAQH,MAAO,OAAQF,UAAU,GAC1C,CAAEK,MAAO,SAAUH,MAAO,SAAUF,UAAU,GAC9C,CAAEK,MAAO,SAAUH,MAAO,SAAUF,UAAU,SCJ5CoB,EAAiB,WACrB,OACE,sBAAK3B,UAAU,qBAAf,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAUS,MAAM,UAChB,cAAC,IAAD,CAAUF,UAAQ,IAClB,cAAC,IAAD,CAAUE,MAAM,QAAQF,UAAQ,IAChC,cAAC,IAAD,CAAUG,SAAO,IACjB,cAAC,IAAD,CAAUD,MAAM,QAAQC,SAAO,IAC/B,cAAC,IAAD,CAAUA,SAAO,EAACH,UAAQ,IAC1B,cAAC,IAAD,CAAUG,SAAO,EAACD,MAAM,QAAQF,UAAQ,QCOxCqB,EAAe,WACnB,OACE,sBAAK5B,UAAU,qBAAf,UACE,cAAC,IAAD,CAAUS,MAAM,QAAQc,QAnBrB,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,yBASP,cAAC,IAAD,CAAUH,MAAM,QAAQc,QApBrB,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,uBASwCA,MAAM,qBACrD,cAAC,IAAD,CACEH,MAAM,QACNc,QAvBC,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,uBAaLA,MAAM,mBACNL,UAAQ,IAEV,cAAC,IAAD,CACEE,MAAM,QACNc,QA7BC,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,uBAmBLA,MAAM,mBACNG,OAAK,IAEP,cAAC,IAAD,CACEN,MAAM,QACNc,QAnCC,CACL,CACEd,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,mBACPG,MAAO,oBAET,CACEH,MAAO,qBACPG,MAAO,uBAyBLA,MAAM,mBACNI,WAAW,uBCtCba,EAAmB,WACvB,OACE,sBAAK7B,UAAU,qBAAf,UACE,cAAC,IAAD,CAAaS,MAAM,UACnB,cAAC,IAAD,CAAaA,MAAM,QAAQG,MAAM,oBACjC,cAAC,IAAD,CAAaH,MAAM,QAAQG,MAAM,kBAAkBL,UAAQ,IAC3D,cAAC,IAAD,CAAaE,MAAM,QAAQG,MAAM,kBAAkBG,OAAK,IACxD,cAAC,IAAD,CACEN,MAAM,QACNG,MAAM,kBACNI,WAAW,uBCVbc,EAA4B,WAChC,OACE,sBAAK9B,UAAU,qBAAf,UACE,cAAC,IAAD,CAAa+B,WAAS,EAACtB,MAAM,UAC7B,cAAC,IAAD,CACEsB,WAAS,EACTtB,MAAM,QACNG,MAAM,+aAKR,cAAC,IAAD,CACEmB,WAAS,EACTtB,MAAM,QACNG,MAAM,6aAINL,UAAQ,IAEV,cAAC,IAAD,CACEwB,WAAS,EACTtB,MAAM,QACNG,MAAM,6aAING,OAAK,IAEP,cAAC,IAAD,CACEgB,WAAS,EACTtB,MAAM,QACNG,MAAM,6aAINI,WAAW,uBC+FJgB,EA/GH,WAAO,IAAD,EACkBC,oBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,KAEVC,EAA2BC,YAC/B,gCAEIC,GAA4B,IAAdJ,EAAqB,WAAa,aAElDK,EAAiBC,YACnBJ,GAAmBF,EAAY,QAAU,OAO3C,OACE,cAAC,IAAD,CAAiBK,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAkBE,aAAW,EAA7B,SACE,cAAC,IAAD,CACErC,MAAO,CACLsC,gBAAiBH,EAAMI,QAAQC,WAAWC,SAF9C,SAKE,sBAAK7C,UAAU,cAAf,UACE,qBAAIA,UAAU,mBAAd,kCACwB,IACtB,cAAC,IAAD,CACES,MAAO6B,EACP5B,QAASwB,EACTY,SAlBO,WACnBX,GAAa,SAACvB,GAAD,OAAYA,WAqBjB,oBACEZ,UAAU,iBACVI,MAAO,CAAE2C,YAAaR,EAAMI,QAAQK,QAAQC,QAG9C,qBAAKjD,UAAU,SAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,qBACA,cAAC,EAAD,SAIJ,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,yBACA,cAAC,EAAD,OAEF,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,wBACA,cAAC,EAAD,OAEF,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,mBACA,cAAC,EAAD,OAEF,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,yBACA,cAAC,EAAD,OAEF,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,sBACA,cAAC,EAAD,YAIN,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,mBACA,cAAC,EAAD,WAIN,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,eAAd,yBACA,cAAC,EAAD,OAEF,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,eAAd,0BACA,cAAC,EAAD,YAIN,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,eAAd,kCACA,cAAC,EAAD,OAEF,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,eAAd,2BACA,cAAC,EAAD,IACA,oBAAIA,UAAU,eAAd,6BACA,cAAC,EAAD,YAIN,qBAAKA,UAAU,qBC1H3BkD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,qrCCW3CC,EAAuB,UAAvBA,EAAuB,UAAvBA,EAAuB,UAAvBA,EAAuB,UAAvBA,EAAuB,UAAvBA,EAAuB,UAAvBA,EAAuB,UAavBC,EAAsB,UAAtBA,EAAsB,UAAtBA,EAAsB,UAAtBA,EAAsB,UAAtBA,EAAsB,UAAtBA,EAUC,UAGDC,EAAuB,CAC3BC,KAD2B,UAE3BC,KAF2B,UAG3BC,KAH2B,UAI3BC,KAJ2B,UAK3BC,GAL2B,UAM3BC,IAN2B,UAO3BC,IAP2B,UAQ3BC,IAR2B,UAS3BC,IAT2B,UAU3BC,IAV2B,UAW3BC,IAX2B,UAY3BC,IAZ2B,UAa3BC,IAb2B,UAc3BC,IAAK,WAGDC,EAAkBjB,EAClBkB,EAAiBlB,EAEjBmB,EAAiBlB,EACjBmB,EAAgBnB,EAQhBoB,EAAiB,UACjBC,EAAgB,U,SCJEC,EAAYC,GAClC,OAAO,aAAW,kBAAmB,CACnCC,KAAM,CACJ1D,MAAOyD,YAAyBvC,UAAzBuC,MADH,MAEJpC,gBACEoC,YAAyBvC,UAAzBuC,MAHE,gBAIJ,UAAW,CACTpC,gBACEoC,YAAyBvC,UAAzBuC,MAA6CE,sBAEjD,WAAY,CACVtC,gBACEoC,YAAyBvC,UAAzBuC,MAA6CG,uBAEjD,aAAc,CACZ5D,MAAOkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAD1C,KAEZd,gBACEH,yBAAiCiB,EAAjCjB,KAA+CiB,EAAO,OAG5DjD,SAAU,CACRc,MAAOkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAD9C,KAERd,gBACEH,yBAAiCiB,EAAjCjB,KAA+CiB,EAAO,MAE1D0B,SAAU,CACR7D,MAAOyD,WAAwBvC,UAAxBuC,MADC,MAER/B,YAAa+B,WAAwBvC,UAAxBuC,MAFL,YAGRpC,gBACEoC,WAAwBvC,UAAxBuC,MAJM,gBAKR,UAAW,CACTzD,MAAOyD,WAAwBvC,UAAxBuC,MADE,WAET/B,YACE+B,WAAwBvC,UAAxBuC,MAHO,iBAITpC,gBACEoC,WAAwBvC,UAAxBuC,MAA4CE,sBAEhD,WAAY,CACV3D,MAAOyD,WAAwBvC,UAAxBuC,MADG,YAEV/B,YACE+B,WAAwBvC,UAAxBuC,MAHQ,kBAIVpC,gBACEoC,WAAwBvC,UAAxBuC,MAA4CG,uBAEhD,aAAc,CACZ5D,MAAOkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAD1C,KAEZd,gBAFY,cAGZK,YAAaR,yBAAiCiB,EAAjCjB,KAA+CiB,EAAO,OAGvE2B,KAAM,CACJ9D,MAAOyD,OAAoBvC,UAApBuC,MADH,MAEJpC,gBAAiBoC,OAAoBvC,UAApBuC,MAFb,gBAGJM,OAHI,OAIJ,UAAW,CACT/D,MAAOyD,OAAoBvC,UAApBuC,MADE,WAETpC,gBACEoC,OAAoBvC,UAApBuC,MAHO,qBAITM,OAAQ,QAEV,WAAY,CACV/D,MAAOyD,OAAoBvC,UAApBuC,MADG,YAEVpC,gBACEoC,OAAoBvC,UAApBuC,MAHQ,sBAIVM,OAAQ,QAEV,aAAc,CACZ/D,MAAOkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAD1C,KAEZd,gBAFY,cAGZK,YAAa,YApEZ,CAAP,KCnEF,IAiEMsC,EAAaR,EAjEsB,CACvCS,UAAW,CACTC,MAAO,CACLlE,MADK,UAELqB,gBAAiBY,EACjB0B,qBAAsB1B,EACtB2B,sBAAuB3B,EACvBkC,wBAAyBhC,EAAO,MAElCiC,KAAM,CACJpE,MADI,UAEJqB,gBAAiBY,EACjB0B,qBAAsB1B,EACtB2B,sBAAuB3B,EACvBkC,wBAAyBhC,EAAO,OAGpC0B,SAAU,CACRK,MAAO,CACLlE,MAAOiC,EACPoC,WAAYpC,EACZqC,YAAarC,EACbZ,gBAJK,cAKLsC,qBALK,2BAMLC,sBANK,2BAOLO,wBAAyBhC,EAPpB,KAQLT,YAAaO,EACbsC,iBAAkBtC,EAClBuC,kBAAmBvC,GAErBmC,KAAM,CACJpE,MAAOiC,EACPoC,WAAYpC,EACZqC,YAAarC,EACbZ,gBAJI,cAKJsC,qBALI,2BAMJC,sBANI,2BAOJO,wBAAyBhC,EAPrB,KAQJT,YAAaO,EACbsC,iBAAkBtC,EAClBuC,kBAAmBvC,IAGvB6B,KAAM,CACJI,MAAO,CACLlE,MAAOiC,EACPoC,WAAYpC,EACZqC,YAAarC,EACbZ,gBAJK,cAKLsC,qBALK,2BAMLC,sBANK,2BAOLO,wBAAyBhC,EAAO,MAElCiC,KAAM,CACJpE,MAAOiC,EACPoC,WAAYpC,EACZqC,YAAarC,EACbZ,gBAJI,cAKJsC,qBALI,2BAMJC,sBANI,2BAOJO,wBAAyBhC,EAAO,SCKhCsC,GAAYjB,EAjEuB,CACvCS,UAAW,CACTC,MAAO,CACLlE,MADK,UAELqB,gBAAiBa,EACjByB,qBAAsBzB,EACtB0B,sBAAuB1B,EACvBiC,wBAAyBhC,EAAO,MAElCiC,KAAM,CACJpE,MADI,UAEJqB,gBAAiBa,EACjByB,qBAAsBzB,EACtB0B,sBAAuB1B,EACvBiC,wBAAyBhC,EAAO,OAGpC0B,SAAU,CACRK,MAAO,CACLlE,MAAOkC,EACPmC,WAAYnC,EACZoC,YAAapC,EACbb,gBAJK,cAKLsC,qBALK,2BAMLC,sBANK,2BAOLO,wBAAyBhC,EAPpB,KAQLT,YAAaQ,EACbqC,iBAAkBrC,EAClBsC,kBAAmBtC,GAErBkC,KAAM,CACJpE,MAAOkC,EACPmC,WAAYnC,EACZoC,YAAapC,EACbb,gBAJI,cAKJsC,qBALI,2BAMJC,sBANI,2BAOJO,wBAAyBhC,EAPrB,KAQJT,YAAaQ,EACbqC,iBAAkBrC,EAClBsC,kBAAmBtC,IAGvB4B,KAAM,CACJI,MAAO,CACLlE,MAAOkC,EACPmC,WAAYnC,EACZoC,YAAapC,EACbb,gBAJK,cAKLsC,qBALK,2BAMLC,sBANK,2BAOLO,wBAAyBhC,EAAO,MAElCiC,KAAM,CACJpE,MAAOkC,EACPmC,WAAYnC,EACZoC,YAAapC,EACbb,gBAJI,cAKJsC,qBALI,2BAMJC,sBANI,2BAOJO,wBAAyBhC,EAAO,SCKhCuC,GAAalB,EAjEsB,CACvCS,UAAW,CACTC,MAAO,CACLlE,MADK,UAELqB,gBAAiBc,EAFZ,KAGLwB,qBAAsBxB,EAHjB,KAILyB,sBAAuBzB,EAJlB,KAKLgC,wBAAyBhC,EAAO,MAElCiC,KAAM,CACJpE,MADI,UAEJqB,gBAAiBc,EAFb,KAGJwB,qBAAsBxB,EAHlB,KAIJyB,sBAAuBzB,EAJnB,KAKJgC,wBAAyBhC,EAAO,OAGpC0B,SAAU,CACRK,MAAO,CACLlE,MADK,UAELqE,WAAYlC,EAFP,KAGLmC,YAAanC,EAHR,KAILd,gBAJK,cAKLsC,qBALK,2BAMLC,sBANK,2BAOLO,wBAAyBhC,EAPpB,KAQLT,YAAaS,EARR,KASLoC,iBAAkBpC,EATb,KAULqC,kBAAmBrC,EAAO,MAE5BiC,KAAM,CACJpE,MADI,UAEJqE,WAAYlC,EAFR,IAGJmC,YAAanC,EAHT,IAIJd,gBAJI,cAKJsC,qBALI,2BAMJC,sBANI,2BAOJO,wBAAyBhC,EAPrB,KAQJT,YAAaS,EART,KASJoC,iBAAkBpC,EATd,KAUJqC,kBAAmBrC,EAAO,OAG9B2B,KAAM,CACJI,MAAO,CACLlE,MADK,UAELqE,WAAYlC,EAFP,KAGLmC,YAAanC,EAHR,KAILd,gBAJK,cAKLsC,qBALK,2BAMLC,sBANK,2BAOLO,wBAAyBhC,EAAO,MAElCiC,KAAM,CACJpE,MADI,UAEJqE,WAAYlC,EAFR,IAGJmC,YAAanC,EAHT,IAIJd,gBAJI,cAKJsC,qBALI,2BAMJC,sBANI,2BAOJO,wBAAyBhC,EAAO,SCpBzBwC,GAAW,SAAC,G,IASvB,E,IARA1F,mBAAUA,EAAA,c,IACVe,iBAAQA,EAAA,Y,IACR4E,yBAAgBA,GAAA,E,IAChBC,4BAAmBA,GAAA,E,IACnBhG,gBAAOA,EAAA,WACPC,YACGgG,+EAGGC,EAvCoB,SAAClG,GAC3B,IAAMmG,EAAN,GACA,UACE,YACEA,qBACAA,cACAA,oBACAA,gBACA,MACF,YACEA,qBACAA,cACAA,oBACAA,gBACA,MACF,QACEA,qBACAA,cACAA,oBACAA,gBAGJ,SAiB2CC,CAA3C,GACMC,EAAmB,CACvBC,QAASJ,EADc,QAEvBK,SAAUL,EAFa,KAGvBM,WAAYN,EAHW,WAIvBO,OAAQP,EAAiBO,QAG3B,UACE,WACEC,EACE,2CACMT,GACJ7F,QAASA,EACT4F,iBAAkBA,EAClBD,cAAeA,EACf7F,MAAOmG,KAGX,MACF,UACEK,EACE,4CACMT,GACJ7F,QAASA,EACT4F,iBAAkBA,EAClBD,cAAeA,EACf7F,MAAOmG,KAGX,MACF,WACEK,EACE,4CACMT,GACJ7F,QAASA,EACT4F,iBAAkBA,EAClBD,cAAeA,EACf7F,MAAOmG,KAGX,MACF,QACEK,EACE,6CACMT,GACJ7F,QAASA,EACTe,MAAOA,EACP6E,iBAAkBA,EAClBD,cAAeA,EACf7F,MAAOmG,KAKf,UCxGIM,GAAc,YAAW,CAC7B9B,KAAM,CACJ+B,aADI,EAEJH,OAAQ,SAHQ,CAApB,KASaI,GAAU,SAAC,G,QACtBC,qBAAYA,EAAA,IACTb,qBAEH,OAAOc,0CAAaD,UAAWA,GAA/B,KCVIE,ICCaC,YAAW,CAC5BpC,KAAM,CACJqC,SADI,WAEJZ,QAFI,OAGJM,aAHI,MAIJ,YAAa,CACXO,QADW,OAEXC,eAFW,SAGXC,WAHW,SAIXC,cAJW,SAKX,QAAS,CACPA,cADO,MAEP,MAAO,CACLC,OAAQ,iBAOKN,YAAW,CAChCpC,KAAM,CACJK,OAAQ,aAAa5B,EADjB,KAEJsD,aAAc,SDxBa,aAAW,kBAAmB,CAC3D/B,KAAM,CACJ1D,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EADrD,KAEJ,iBAAkB,CAChBnC,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,WAJoB,CAA/B,MAWakE,GAAqB,SAAC,GAGjC,OAAOT,4CAAP,K,wUEpBF,IAAIU,EAAYC,IAAQA,GAAKD,UAAa,WAStC,OARAA,EAAWE,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,IAEKU,MAAMb,KAAMO,YAE5BO,EAAUd,IAAQA,GAAKc,QAAW,SAAUV,EAAGW,GAC/C,IAAIZ,EAAI,GACR,IAAK,IAAIM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,IAAMM,EAAEC,QAAQP,GAAK,IAC9EN,EAAEM,GAAKL,EAAEK,IACb,GAAS,MAALL,GAAqD,oBAAjCH,OAAOgB,sBACtB,KAAIZ,EAAI,EAAb,IAAgBI,EAAIR,OAAOgB,sBAAsBb,GAAIC,EAAII,EAAED,OAAQH,IAC3DU,EAAEC,QAAQP,EAAEJ,IAAM,GAAKJ,OAAOS,UAAUQ,qBAAqBN,KAAKR,EAAGK,EAAEJ,MACvEF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAE1B,OAAOF,GAEPgB,EAAmBnB,IAAQA,GAAKmB,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDnB,OAAOqB,eAAeC,EAAS,aAAc,CAAEvI,OAAO,IACtDuI,EAAA,aAAuBA,EAAQC,cAAW,EAC1C,IAAIC,EAAUN,EAAgBO,KAC9BH,EAAA,SAAmB,SAAUI,GACzB,IAAIC,EAAO,GAIX,OAHAD,EAAQE,MAAMC,SAAQ,SAAUC,GAC5BH,EAAKI,KAAKD,EAAKE,WAAWC,KAAKC,MAAM,MAAM,OAExCP,GAeXL,EAAA,aAAuB,SAAUhD,GAC7B,IAAI9E,EAAQ8E,EAAM9E,MAAO2I,EAAK7D,EAAMjG,KAAMA,OAAc,IAAP8J,EAAgB,OAASA,EAAIL,EAAOxD,EAAMwD,KAAMJ,EAAUpD,EAAMoD,QAASU,EAAK9D,EAAMnG,UAAWA,OAAmB,IAAPiK,EAAgB,GAAKA,EAAIC,EAAK/D,EAAM/F,MAAOA,OAAe,IAAP8J,EAAgB,GAAKA,EAAIC,EAAOzB,EAAOvC,EAAO,CAAC,QAAS,OAAQ,OAAQ,UAAW,YAAa,UAO/S,OArBJ,SAAgBwD,EAAMJ,EAASa,EAAQlK,EAAMF,EAAWmK,GACpD,IAE2BE,EADvBC,EAAcf,EAAQE,MAAMc,MADrB,SAAUC,GAAU,OAAOA,EAAOX,WAAWC,KAAKC,MAAM,MAAMU,SAASd,MAMlF,OAAIW,EACQjB,EAAQxG,QAAQ6H,cAAc,MAAO/C,EAAS,CAAE3H,UAAWA,EAAWI,MAAOgK,EAAOO,IAAKC,MAAO1K,EAAMyG,OAAQzG,EAAM2K,QAAS,QAAUP,EAAYX,KAAKiB,OAAS,QAAU,QAASE,MAAO,8BAAgCX,GAAOG,EAAYX,KAAKoB,MAAMC,KAL1OX,EAKyPC,EAAYX,KALnP,SAAUsB,EAAMC,GACzD,IAAIC,EAASd,EAAQc,OAASd,EAAQc,MAAMD,IAAW,GACvD,OAAO7B,EAAQxG,QAAQ6H,cAAc,OAAQ/C,EAAS,CAAEvH,MAAOgK,EAAOa,KAAMG,IAAKF,EAAOG,EAAGJ,GAAQE,SAKvGG,QAAQC,KAAK,QAAU5B,EAAO,oBACvB,MAUA6B,CAAO7B,EAAMJ,EANP,CACToB,IAAKhD,EAAS,CAAEN,QAAS,eAAgBoE,cAAe,UAAYrL,GACpE6K,KAAM,CACFS,KAAMrK,IAGuBnB,EAAMF,EAAWmK,IAE1DhB,EAAQwC,aAAaC,YAAc,eACnCzC,EAAA,QAAkBA,EAAQwC,gB,mCC3D1B9D,OAAOqB,eAAeC,EAAS,aAAc,CAAEvI,OAAO,IAEtD,IAAIiL,EAAiBC,GACrBjE,OAAOqB,eAAeC,EAAS,WAAY,CAAE4C,YAAY,EAAMC,IAAK,WAAc,OAAOH,EAAezC,YACxGD,EAAA,QAAkB2C,GAAeH,iB,yp5NCUpBM,GAAS,SAAC,G,QACrBtC,gBAAOA,EAAA,S,IACPzJ,gBAAOA,EAAA,KACJiG,uBAGG+F,EACJ3J,UAFmB4J,cAEnB5J,aAAiCiB,EAAjCjB,KAA+CiB,EADjD,KAEMnC,EAAgB8E,QAAcA,EAAdA,MAAtB,EAEA,OACEc,0CACEsC,QAAS6C,GACTzC,KAAMA,EACNzJ,KAAMA,EACNmB,MAAOA,GALX,KCjBIgL,GAAiB,aAAW,kBAAmB,CACnDtH,KAAM,CACJyB,QADI,EAEJnF,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,OAEP8I,aAAc,CACZ,UAAW,CACT5J,gBACEH,oDADa,4BAMjB,WAAY,CACVG,gBACEH,oDADa,4BAMjB,sBAAuB,CACrBG,gBACEH,oDADa,4BAMjB,uBAAwB,CACtBG,gBACEH,oDADa,4BAMjB,iBAAkB,CAChBlB,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,WAnCY,CAAvB,KAgEa+I,GAAa,SAAC,G,QACzBtG,yBAAgBA,GAAA,EAChBxF,UACG0F,iCAEG5D,EAAe4J,cACfK,EApBoB,SAAC,EAAD,GAI1B,SACSjK,yBAAiCiB,EAAjCjB,KAA+CiB,EAAtD,KAEKjB,kBAAP,KAaiCkK,CAAoBlK,EAAO4D,EAA5D,UACMuG,EA/BsB,SAAC,EAAD,GAI5B,SACSnK,yBAAiCiB,EAAjCjB,KAA+CiB,EAAtD,KAEKjB,yBAAiCiB,EAAjCjB,KAA+CiB,EAAtD,KAwBmCmJ,CAAsB,EAEvDxG,EAFF,UAKA,OACE,iCACE,4BACEyG,QACE,4CACMzG,GACJ9E,MAAM,UACN4E,cAAeA,EACf0D,KACE,4BACEA,KAAK,sBACLzJ,KAAM,GACNmB,MAAOqL,IAGXG,YACE,4BACElD,KAAK,oBACLzJ,KAAM,GACNmB,MAAOmL,OAKf/L,MAAOA,M,SC5GCqM,GAAUC,EAAaC,GACrC,IAAM3G,EAAS,4CAA4C4G,KAA3D,GAEA,OAAO5G,EAAM,QACD6G,SAAS7G,EAAD,GADP,SAC2B6G,SAAS7G,EAAD,GADnC,SACuD6G,SAC9D7G,EADsE,GAD/D,oBAAb,ECiBF,IAAM8G,GAAuBhG,aAAW,mBACtCiG,YAAa,CACXrI,KAAM,CACJrC,gBAAiB,IACfH,yBAAiCiB,EAAjCjB,UADa,SAOf8K,GAAkBlG,aAAW,mBACjCiG,YAAa,CACXE,MAAO,CACL5K,gBAAiB,IACfH,yBAAiCiB,EAAjCjB,UAFG,GAILgL,UAAW,aAKXC,GAAmB,aAAW,kBAAmB,CACrDzI,KAAM,CACJ0I,UADI,aAEJ9G,OAFI,OAGJ,yBAA0B,CACxBjE,gBAAiBH,qBADO,MAExB6C,OAAQ,cACN7C,yBAAiCiB,EAAjCjB,KAA+CiB,EAHzB,MAKxBsD,aALwB,EAMxB2G,UANwB,aAOxB,WAAY,CACVC,QAAS,mBAEX,UAAW,CACTA,QAAS,mBAEX,UAAW,CACT3K,YAAa,IACXR,yBAAiCiB,EAAjCjB,KAA+CiB,EADtC,MAIb,WAAY,CACV,0BAA2B,CACzBgD,QAAS,kBAGb,gBAAiB,CACf,0BAA2B,CACzBA,QAAS,kBAGb,cAAe,CACbpB,OAAQ,cACN7C,yBAAiCgB,EAAaA,GAEhD,0BAA2B,CACzBiD,QAAS,kBAGb,iBAAkB,CAChBpB,OAAQ,cACN7C,yBAAiCiB,EAAjCjB,KAA+CiB,EAFjC,MAIhB,0BAA2B,CACzBgD,QAAS,6BAGb,0BAA2B,CACzBmH,WADyB,IAEzBlH,SAFyB,OAGzBD,QAHyB,gBAIzB,iBAAkB,CAChBnF,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,QAGT,wBAAyB,CACvB,UAAW,CACTd,gBAAiB,IACfH,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,KAHA,MAMjB,WAAY,CACVd,gBAAiB,IACfH,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,KAHA,QAQrB,0BAA2B,CACzBiD,SADyB,OAEzBC,WAFyB,OAGzB,yBAA0B,CACxBD,SADwB,OAExBC,WAFwB,OAGxBkH,UAHwB,uBAIxBvM,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,OAEP,cAAe,CACbnC,MAAO,IAAGkB,yBAAiCgB,EAAaA,IAE1D,iBAAkB,CAChBlC,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,QAGT,4BAA6B,CAC3Bd,gBAD2B,cAE3B,cAAe,CACbrB,MAAO,IAAGkB,yBAAiCgB,EAAaA,SA5FvC,CAAzB,KAoGasK,GAAe,SAAC,G,QAC3BjN,iBAAQA,EAAA,OACLuF,iB,EAEsCc,sBAAlC6G,OAAcC,OACfC,EAAwCX,KACxCY,EAAqCd,KACrCe,EAAejH,sBAErB,OACE,6BAAakH,WAAS,GACpB,6BAAyBC,MAAOC,KAC9B,4CACMlI,GACJmI,IAAKJ,EACLK,gBAAc,EACd3N,MAAOkN,EACPxN,QAAQ,SACRG,MAAM,aACN+N,aAAa,SACbC,OAAO,aACPC,aAAc,CACZC,QADY,EAEZC,UAAWV,EAFC,QAGZW,aAAc,CAAEC,SAAF,MAAmBC,WAAY,QAC7CC,gBAAiB,CAAEF,SAAF,MAAmBC,WAAY,SAElDE,WAAY,CAAEC,UAAU,GACxBC,sBAAuB,CAAER,QAASV,GAClCmB,eAAgB,4BAAQzF,KAAK,UAAUzJ,KAAK,OAC5CmP,qBAAsB,CAAEV,QAASV,GACjCqB,cAAe,4BAAQ3F,KAAK,SAASzJ,KAAK,OAC1CqP,aAAc,4BAAQ5F,KAAK,YAAYzJ,KAAK,OAC5C4C,SAAU,YACRiL,YClKNyB,GAAmB,aAAW,kBAAmB,CACrDzK,KAAM,CACJ0C,OADI,OAEJ,UAAW,CACT/E,gBACEH,oDADa,4BAMjB,WAAY,CACVG,gBACEH,oDADa,gCAXI,CAAzB,KAiDakN,GAAe,SAAC,G,IAC3BtP,Y,IACAgB,kBAASA,EAAA,W,IACTD,kBAASA,EAAA,SACNiF,qCAGGuJ,EAAN,UADqBvD,cACS5J,aAExBoN,EAAwBD,EAAelM,EAAH,KAAiBA,EAA3D,KACMoM,EAAsBzP,IAFKuP,EAAelM,EAAH,KAAiBA,EAA9D,MAGMqM,EAxCwB,SAAC3P,GAC/B,IAAMmG,EAAN,GACA,UACE,WACEA,gBACAA,YACA,MACF,YACEA,gBACAA,YACA,MACF,YACEA,gBACAA,YACA,MACF,QACEA,gBACAA,YAGJ,SAoBmDyJ,CAAnD,GAIA,OACE,4CACM3J,GACJF,eAAa,EACb7F,MAAO,CAAEoG,QAASqJ,EAAqBrJ,WAEvC,4BACEmD,KAAMzI,EACNhB,KAAM2P,EAAqB3P,KAC3BmB,MAAO8E,aAAiCyJ,MChF1CG,GAAa,aAAW,kBAAmB,CAC/ChL,KAAM,CACJ,+BAAgC,CAC9B1D,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,MAEP,iBAAkB,CAChBwM,OAAQ,eANK,CAAnB,KAWMC,GAAc,SAAC/P,GACnB,MACA,UACE,YACEuG,SACA,MACF,QACEA,SAGJ,UAOWyJ,GAAS,SAAC,G,QACrB/O,kBAASA,EAAA,WACTE,UACG8E,0BAEGhG,EAAUkB,wBAAhB,UACA,OACE,4CACM8E,GACJ/F,MAAO,CACLqG,SAAUwJ,GAAY9O,IAExBE,MAAOlB,MCxCPgQ,GAAkB,aAAW,kBAAmB,CACpDpL,KAAM,CACJ,uBAAwB,CACtBrC,gBAAiBH,qBADK,MAEtB,gBAAiB,CACfG,gBAAiBH,qBAAyB+K,QAG9CG,UAPI,aAQJ,yBAA0B,CACxBrI,OAAQ,cACN7C,yBAAiCiB,EAAjCjB,KAA+CiB,EAFzB,MAIxBsD,aAJwB,EAKxB2G,UALwB,aAMxB,WAAY,CACVC,QAAS,mBAEX,UAAW,CACTA,QAAS,mBAEX,UAAW,CACT3K,YAAaR,yBAAiCiB,EAAjCjB,KAA+CiB,EAAO,KAErE,WAAY,CACV4B,OAAQ,aAAa7C,kBADX,KAEV,0BAA2B,CACzBiE,QAAS,kBAGb,gBAAiB,CACfpB,OAAQ,aAAa7C,kBADN,KAEf,0BAA2B,CACzBiE,QAAS,kBAGb,cAAe,CACbpB,OAAQ,cACN7C,yBAAiCgB,EAAaA,GAEhD,0BAA2B,CACzBiD,QAAS,kBAGb,iBAAkB,CAChBpB,OAAQ,cACN7C,yBAAiCiB,EAAjCjB,KAA+CiB,EAFjC,MAIhB,0BAA2B,CACzBgD,QAAS,6BAGb,6BAA8B,CAC5B,0BAA2B,CACzBA,QAAS,iBAEXA,QAJ4B,gBAK5B,kCAAmC,CACjCA,QAAS,IAGb,0BAA2B,CACzBmH,WADyB,IAEzBlH,SAFyB,OAGzBD,QAHyB,gBAIzB,iBAAkB,CAChBnF,MAAOkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAAO,OAGjE,4BAA6B,CAC3Bd,gBAAiB,gBAGrB,0BAA2B,CACzB+D,SADyB,OAEzBC,WAFyB,OAGzB,yBAA0B,CACxBD,SADwB,OAExBC,WAFwB,OAGxBkH,UAAW,wBAEb,cAAe,CACbvM,MAAOkB,yBAAiCgB,EAAaA,GAEvD,iBAAkB,CAChBlC,MAAOkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAAO,OAGjE,4BAA6B,CAC3B,cAAe,CACbnC,MAAOkB,yBAAiCgB,EAAaA,QA1FrC,CAAxB,KAoGa6M,GAAc,SAAC,G,QAC1B9P,mBAAUA,EAAA,W,IACV+P,gBAAOA,EAAA,IAEJlK,GADH9E,QACG8E,iCAGH,MADA9E,UAEE,6BAAa8M,WAAS,GACpB,4CAAqBhI,GAAO9E,MAHhCA,UAG8Cf,QAASA,EAAS+P,KAAMA,OChGlEC,GAAe,aAAW,iBAAO,CACrCvL,KAAM,CACJ,QAAS,CACPqC,SADO,WAEPmJ,MAFO,GAGPC,cAHO,OAIPC,IAAK,YANU,CAArB,IAWMC,GAAiB,aAAW,kBAAmB,CACnD3L,KAAM,CACJ,UAAW,CACTnC,WACEL,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,UAEjB,WAAY,CACVZ,WACEL,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,UAEjB,iBAAkB,CAChBZ,WACEL,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,KAJC,IAKhB,UAAW,CACTZ,WACEL,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,eAvBA,CAAvB,KA6BMmN,GAAgBxJ,YAAW,CAC/BmG,MAAO,CACLC,UADK,OAELzG,aAAc,qBAWL8J,GAAgB,SAAC,G,IAC5BrP,YACAP,eACAP,UACAe,iBACAZ,UACAkC,aACGqD,0EAEG0K,EAAsBjQ,GAA5B,E,EACgCqG,sBAAzB6J,OAAUC,OACXC,EAA4CL,KAmB5CM,EAAY,SAAC,EAAD,GAIhB,OAAOC,GAAkBA,UAAuBC,EAAvBD,QAAzB,GAGF,OACE,6BAAa/C,WAAS,GACpB,4BACEiD,QAAM,EACN3Q,MAAOA,EACPO,WAAYA,EACZD,MAAOoF,EAAMpF,MACbR,SAAU4F,EAAM5F,SAChB8Q,YAAW,QAETC,UAFS,EAGT9P,aAHS,EAITZ,MAJS,EAKT2Q,UAAW,CACTjR,QADS,OAETkR,WAFS,EAGTC,sBAHS,EAIT9C,QAASqC,GAEXlO,SA3Ca,SAAC,EAAD,GAOnBiO,EAAYW,SAAZX,OACA,GACEjO,EAAS4O,EAAT5O,IAmCI6O,YA/Be,SAACT,GACtB,OAAOA,EAAiBA,OAAH,KAArB,IA+BMU,cAAe,mBACb3K,0CAAQ0C,KAAK,SAASzJ,KAAK,MADd,QAKhBqB,EAAA,KAAY,mBACX,4BAAgB6J,IAAK+F,EAAOvQ,MAAOA,MAAOuQ,EAAOvQ,OAC/C,4BAAYF,QAASuQ,EAAUE,EAAQL,KACvC,6BAAc9N,QAASmO,EAAO1Q,eCpIpCoR,GAAc,aAAW,kBAAmB,CAChD9M,KAAM,CACJ1D,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,OAEP8I,aAAc,CACZ,UAAW,CACT5J,gBACEH,oDADa,4BAMjB,WAAY,CACVG,gBACEH,oDADa,4BAMjB,sBAAuB,CACrBG,gBACEH,oDADa,4BAMjB,uBAAwB,CACtBG,gBACEH,oDADa,4BAMjB,iBAAkB,CAChBlB,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,WAlCS,CAApB,KA2CasO,GAAU,SAAVA,EAAW,G,IACtBrR,UACG0F,iBAEH,SAEI,iCACE,4BACEyG,QAAS,2CAAazG,GAAO9E,MAAM,UAAU4E,eAAa,KAC1DxF,MAAOA,EACPF,SAAU4F,EAAM5F,YAKjB,4CAAiB4F,GAAO9E,MAAM,UAAU4E,eAAa,MC/CjD8L,GAAe,SAAC,G,IAC3BtR,UACAc,YACG4E,2BAEH,OACE,iCACEc,qCADF,GAEE,6CAAgBd,GAAO9E,MAAM,YAC1BE,EAAA,KAAY,cACX,OACE,4BACE6J,IAAG,GAAK4G,EAAL,MAAiB/J,EACpBrH,MAAOoR,EAAIpR,MACXgM,QAAS3F,iCACTxG,MAAOuR,EAAIvR,MACXF,SAAUyR,EAAIzR,iBC1BtB+P,GAAe,aAAW,iBAAO,CACrCvL,KAAM,CACJ,QAAS,CACPqC,SADO,WAEPmJ,MAFO,GAGPC,cAHO,OAIPC,IAAK,YANU,CAArB,IAWMC,GAAiB,aAAW,kBAAmB,CACnD3L,KAAM,CACJ,UAAW,CACTnC,WACEL,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,UAEjB,WAAY,CACVZ,WACEL,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,UAEjB,iBAAkB,CAChBZ,WACEL,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,KAJC,IAKhB,UAAW,CACTZ,WACEL,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,eAvBA,CAAvB,KA6BMmN,GAAgBxJ,YAAW,CAC/BmG,MAAO,CACLC,UADK,OAELzG,aAAc,mBAEhB,uCAAwC,CACtCwG,MAAO,CACLC,UAAW,WAgBJ0E,GAAW,SAAC,G,IACvB1Q,YACAP,eACAP,UACG0F,wCAEG6K,EAA4CL,KAElD,OACE,6BAAaxC,WAAS,GACpB,4BACEiD,QAAM,EACN3Q,MAAOA,EACPO,WAAYA,EACZD,MAAOoF,EAAMpF,MACbR,SAAU4F,EAAM5F,SAChB8Q,YAAW,QAETO,cAAe,mBACb3K,0CAAQ0C,KAAK,SAASzJ,KAAK,MADd,KAGfqR,UAAW,CACTjR,QADS,OAETkR,WAFS,EAGTC,sBAHS,EAIT9C,QAASqC,MAIZzP,EAAA,KAAY,qBACX,4BAAgB6J,IAAG,UAAYF,EAAStK,MAAOuQ,EAAOvQ,OACnDuQ,EAFQ,aC7Ffe,GAAe,aAAW,kBAAmB,CACjDnN,KAAM,CACJ6F,MADI,GAEJjE,OAFI,GAGJH,QAHI,GAIJa,QAAS,QAEX8K,WAAY,CACVC,KADU,EAEV5L,QAFU,GAGVnF,MAAOkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAH5C,KAIV,aAAc,CACZ+J,WAAY,GAEd,UAAW,CACT7K,gBACEH,gFAIJ,WAAY,CACVG,gBACEH,gFAIJ,iBAAkB,CAChBlB,MAAOkB,yBAAiCiB,EAAjCjB,KAA+CiB,EADtC,KAEhB,aAAc,CACZwJ,QADY,EAEZtK,gBAFY,cAGZK,YAAaR,yBAAiCiB,EAAjCjB,KAA+CiB,EAAO,OAGvE,gBAAiB,CACfoK,UADe,mBAEfvM,MAAOkB,2BAFQ,EAGf,aAAc,CACZyK,QADY,EAEZtK,gBAAiBH,kBAFL,KAGZQ,YAAaR,kBAAsBU,MAErC,UAAW,CACTP,gBACEH,gFAIJ,WAAY,CACVG,gBACEH,gFAIJ,iBAAkB,CAChBlB,MAAOkB,2BADS,EAEhB,aAAc,CACZyK,QADY,EAEZtK,gBACEH,yBAAiCiB,EAAjCjB,KAA+CiB,EAHrC,KAIZT,YACER,yBAAiCiB,EAAjCjB,KAA+CiB,EAAO,SAKhE6O,MAAO,CACLzH,MADK,GAELjE,OAFK,GAGL2L,UAAW,QAEbC,MAAO,CACLnN,OAAQ,aAAa7C,eADhB,KAELuE,aAFK,GAGLkG,QAHK,EAILtK,gBACEH,2BAAkDqC,MA5EnC,CAArB,KAoFa4N,GAAW,SAAC,G,QACvBvM,yBAAgBA,GAAA,EAEhBxF,GADAY,QACAZ,SACG0F,yCAGH,MADA9E,UAEE,iCACE,4BACEuL,QACE3F,0CACE5F,MANVA,UAOU4E,cAAeA,GAFjBgB,IAMFxG,MAAOA,MC1GTgS,ICkBY,aAAW,kBAAmB,CAC9C1N,KAAM,CACJ,UAAW,CACTrC,gBACEH,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,cANH,CAAlB,iBAWwB,YAAW,CACjCuB,KAAM,CACJyB,QADI,sBAEJoE,MAFI,OAGJ,sCAAuC,CACrCpE,QAAS,MALS,CAAxB,KAU2BW,aAAW,mBACpCiG,YAAa,CACXrI,KAAM,CACJ1D,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,OAEPkP,eAAgB,CACd,gBAAiB,CACfrR,MAAO,IAAGkB,yBAAiCe,EAAcA,IAE3D,UAAW,CACTZ,gBACEH,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,UAEjB,WAAY,CACVd,gBACEH,yBACIuK,GAAUtJ,EAAD,KADbjB,IAEIuK,GAAUtJ,EAAD,UAEjB,sBAAuB,CACrBd,gBACEH,yBACIuK,GAAUxJ,EADdf,IAEIuK,GAAUxJ,EAAD,KAEjB,uBAAwB,CACtBZ,gBACEH,yBACIuK,GAAUxJ,EADdf,IAEIuK,GAAUxJ,EAAD,KAEjB,iBAAkB,CAChBjC,MAAO,IAAGkB,yBAAiCiB,EAAjCjB,KAA+CiB,EAApD,aAOHmP,sBAAW,qBACjB,oCAAQhJ,KAAK,YAAexD,GAAOmI,IAAKA,QAElCqE,sBAAW,qBACjB,oCAAQhJ,KAAK,eAAkBxD,GAAOmI,IAAKA,QAElCqE,sBAAW,qBACpB,oCAAQhJ,KAAK,QAAWxD,GAAOmI,IAAKA,QAE3BqE,sBAAW,qBACpB,oCAAQhJ,KAAK,UAAaxD,GAAOmI,IAAKA,QAE9BqE,sBAAW,qBACnB,oCAAQhJ,KAAK,WAAcxD,GAAOmI,IAAKA,QAE/BqE,sBAAW,qBACnB,oCAAQhJ,KAAK,WAAcxD,GAAOmI,IAAKA,QAE3BqE,sBAAW,qBACvB,oCAAQhJ,KAAK,UAAaxD,GAAOmI,IAAKA,QAE3BqE,sBAAW,qBACtB,oCAAQhJ,KAAK,SAAYxD,GAAOmI,IAAKA,QAE/BqE,sBAAW,qBACjB,oCAAQhJ,KAAK,UAAaxD,GAAOmI,IAAKA,QDzGD,CACvCnI,MAAO,CACLyM,cAAe,CACb3M,eAAe,IAGnB4M,MAAO,CACL/L,aAAc,GAEhBgM,UAAW,CACTC,oBAAqB,CACnBhO,KAAM,CACJiO,YAAa,IAGjBC,cAAe,CACb3G,aAAc,CACZ,UAAW,CACTxF,aAAc,OAEhB,WAAY,CACVA,aAAc,SAIpBoM,UAAW,CACTnO,KAAM,CACJyB,QADI,WAEJG,OAFI,OAGJ8G,UAAW,cAEbhN,MAAO,CACLJ,cAAe,SAGnB8S,SAAU,CACRC,WAAY,CACVd,UACE,iGAEJe,WAAY,CACVf,UACE,0GAEJgB,WAAY,CACVhB,UACE,0GAEJiB,WAAY,CACVjB,UACE,2GAEJkB,WAAY,CACVlB,UACE,4GAEJmB,WAAY,CACVnB,UACE,oHAEJoB,WAAY,CACVpB,UACE,oHAEJqB,YAAa,CACXrB,UACE,qHAEJsB,YAAa,CACXtB,UACE,sHAEJuB,YAAa,CACXvB,UACE,2HEhEVG,WAA6B,CAC3BqB,KAD2B,OAE3B9Q,QAAS,CACPC,KAAMuB,GAERuP,UAAW,CACT9Q,KAAMyB,GAER9B,WAAY,CACVC,QzBiDqB,UyBhDrByK,MAAO1I,GAEToP,KAZ2B,EAc3BC,OAAQ,CACNC,OAAQ1Q,EADF,KAEN2Q,iBAFM,GAGNC,MAAO9Q,EACP+Q,aAJM,GAKNvD,SAAUxN,EACVgR,gBANM,GAON/T,SAAUiD,EAPJ,KAQN+Q,mBAAoB/Q,EARd,KASNgR,gBATM,IAUNC,MAVM,sBAWNC,aAAc,MAIlB,IAAMC,GAAaC,YAAnB,IC9BAnC,WAA6B,CAC3BqB,KAD2B,QAE3B9Q,QAAS,CACPC,KAAMsB,GAERwP,UAAW,CACT9Q,KAAMwB,GAER7B,WAAY,CACVC,Q1BiDsB,U0BhDtByK,MAAO3I,GAETqP,KAZ2B,EAc3BC,OAAQ,CACNC,OAAQ1Q,EADF,KAEN2Q,iBAFM,GAGNC,MAAO9Q,EACP+Q,aAJM,IAKNvD,SALM,sBAMNwD,gBANM,IAON/T,SAPM,sBAQNiU,gBARM,IASND,mBATM,sBAUNE,MAVM,sBAWNC,aAAc,MAIlB,IAAMG,GAAWD,YAAjB,I,SC5BgBpS,GAAcsR,GAC5B,MAAOA,aAAP,M","file":"static/js/main.633f1008.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { SFButton } from 'sfui';\r\n\r\nconst SFButtonsView = () => {\r\n  return (\r\n    <div className='layout-columns three'>\r\n      {renderButtonsColumn('small')}\r\n      {renderButtonsColumn('medium')}\r\n      {renderButtonsColumn('large')}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst renderButtonsColumn = (\r\n  size: 'small' | 'medium' | 'large' | undefined\r\n) => {\r\n  return (\r\n    <div className='layout-columns three'>\r\n      <SFButton sfColor='blue' size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='blue' variant='outlined' size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='blue' variant='text' size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='grey' size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='grey' variant='outlined' size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='grey' variant='text' size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='red' size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='red' variant='outlined' size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='red' variant='text' size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='blue' disabled={true} size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='blue' variant='outlined' disabled={true} size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n      <SFButton sfColor='blue' variant='text' disabled={true} size={size}>\r\n        <span style={{ textTransform: 'capitalize' }}>{size}</span>\r\n      </SFButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFButtonsView };\r\n","import React from 'react';\r\n\r\nimport { SFCheckbox } from 'sfui';\r\n\r\nconst SFCheckboxesView = () => {\r\n  return (\r\n    <div className='layout-columns two'>\r\n      <SFCheckbox />\r\n      <SFCheckbox label='Bagel' />\r\n      <SFCheckbox disabled />\r\n      <SFCheckbox label='Bagel' disabled />\r\n      <SFCheckbox checked />\r\n      <SFCheckbox label='Bagel' checked />\r\n      <SFCheckbox checked disabled />\r\n      <SFCheckbox label='Bagel' checked disabled />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFCheckboxesView };\r\n","import React from 'react';\r\n\r\nimport { SFDatePicker } from 'sfui';\r\n\r\nconst SFDatePickerView = () => {\r\n  return (\r\n    <div className='layout-columns one'>\r\n      <SFDatePicker label='Bagel' />\r\n      <SFDatePicker label='Bagel' value={Date.now()} />\r\n      <SFDatePicker label='Bagel' value={Date.now()} disabled />\r\n      <SFDatePicker label='Bagel' value={Date.now()} error />\r\n      <SFDatePicker\r\n        label='Bagel'\r\n        value={Date.now()}\r\n        helperText='Helper Message'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFDatePickerView };\r\n","import React from 'react';\r\n\r\nimport { SFIconButton } from 'sfui';\r\n\r\nconst SFIconButtonView = () => {\r\n  return (\r\n    <div className='layout-columns four'>\r\n      <SFIconButton sfIcon='Callendar' sfSize='tiny' />\r\n      <SFIconButton sfIcon='Callendar' sfSize='small' />\r\n      <SFIconButton sfIcon='Callendar' sfSize='medium' />\r\n      <SFIconButton sfIcon='Callendar' sfSize='large' />\r\n      <SFIconButton sfIcon='Callendar' sfSize='tiny' disabled />\r\n      <SFIconButton sfIcon='Callendar' sfSize='small' disabled />\r\n      <SFIconButton sfIcon='Callendar' sfSize='medium' disabled />\r\n      <SFIconButton sfIcon='Callendar' sfSize='large' disabled />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFIconButtonView };\r\n","import React from 'react';\r\n\r\nimport { SFLink } from 'sfui';\r\n\r\nconst SFLinksView = () => {\r\n  return (\r\n    <div className='layout-columns two'>\r\n      <SFLink sfSize='medium' color='primary'>\r\n        I am a link example\r\n      </SFLink>\r\n      <SFLink sfSize='small' color='primary'>\r\n        I am a link example\r\n      </SFLink>\r\n      <SFLink sfSize='medium'>I am a link example</SFLink>\r\n      <SFLink sfSize='small'>I am a link example</SFLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFLinksView };\r\n","import React from 'react';\r\n\r\nimport { SFMultiSelect, SFMultiSelectOption } from 'sfui';\r\n\r\nconst getOptions = (): SFMultiSelectOption[] => {\r\n  return [\r\n    {\r\n      label: 'Bagel number one',\r\n      value: 'Bagel number one'\r\n    },\r\n    {\r\n      label: 'Bagel number two',\r\n      value: 'Bagel number two'\r\n    },\r\n    {\r\n      label: 'Bagel number three',\r\n      value: 'Bagel number three'\r\n    }\r\n  ];\r\n};\r\n\r\nconst SFMultiSelectView = () => {\r\n  return (\r\n    <div className='layout-columns one'>\r\n      <SFMultiSelect label='Bagel' options={getOptions()} defaultValue={[]} />\r\n      <SFMultiSelect\r\n        label='Bagel'\r\n        options={getOptions()}\r\n        defaultValue={['Bagel number one']}\r\n      />\r\n      <SFMultiSelect\r\n        label='Bagel'\r\n        options={getOptions()}\r\n        defaultValue={['Bagel number one']}\r\n        disabled\r\n      />\r\n      <SFMultiSelect\r\n        label='Bagel'\r\n        options={getOptions()}\r\n        defaultValue={['Bagel number one']}\r\n        error\r\n      />\r\n      <SFMultiSelect\r\n        label='Bagel'\r\n        options={getOptions()}\r\n        defaultValue={['Bagel number one']}\r\n        helperText='Helper Message'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFMultiSelectView };\r\n","import React from 'react';\r\n\r\nimport { SFRadio } from 'sfui';\r\n\r\nconst SFRadioView = () => {\r\n  return (\r\n    <div className='layout-columns two'>\r\n      <SFRadio />\r\n      <SFRadio label='Bagel' />\r\n      <SFRadio disabled />\r\n      <SFRadio label='Bagel' disabled />\r\n      <SFRadio checked />\r\n      <SFRadio label='Bagel' checked />\r\n      <SFRadio checked disabled />\r\n      <SFRadio label='Bagel' checked disabled />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFRadioView };\r\n","import React from 'react';\r\n\r\nimport { SFRadioGroup, SFRadioOptionsProps } from 'sfui';\r\n\r\nconst SFRadioGroupView = () => {\r\n  const options: SFRadioOptionsProps[] = [\r\n    { value: 'male', label: 'Male', disabled: false },\r\n    { value: 'female', label: 'Female', disabled: false },\r\n    { value: 'others', label: 'Others', disabled: false }\r\n  ];\r\n  return (\r\n    <div className='layout-columns'>\r\n      <SFRadioGroup label='Genders' defaultValue={'male'} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFRadioGroupView };\r\n","import React from 'react';\r\n\r\nimport { SFSwitch } from 'sfui';\r\n\r\nconst SFSwitchesView = () => {\r\n  return (\r\n    <div className='layout-columns two'>\r\n      <SFSwitch />\r\n      <SFSwitch label='Bagel' />\r\n      <SFSwitch disabled />\r\n      <SFSwitch label='Bagel' disabled />\r\n      <SFSwitch checked />\r\n      <SFSwitch label='Bagel' checked />\r\n      <SFSwitch checked disabled />\r\n      <SFSwitch checked label='Bagel' disabled />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFSwitchesView };\r\n","import React from 'react';\r\n\r\nimport { SFSelect, SFSelectOption } from 'sfui';\r\n\r\nconst getOptions = (): SFSelectOption[] => {\r\n  return [\r\n    {\r\n      label: 'Bagel number one',\r\n      value: 'Bagel number one'\r\n    },\r\n    {\r\n      label: 'Bagel number two',\r\n      value: 'Bagel number two'\r\n    },\r\n    {\r\n      label: 'Bagel number three',\r\n      value: 'Bagel number three'\r\n    }\r\n  ];\r\n};\r\n\r\nconst SFSelectView = () => {\r\n  return (\r\n    <div className='layout-columns one'>\r\n      <SFSelect label='Bagel' options={getOptions()} />\r\n      <SFSelect label='Bagel' options={getOptions()} value='Bagel number one' />\r\n      <SFSelect\r\n        label='Bagel'\r\n        options={getOptions()}\r\n        value='Bagel number one'\r\n        disabled\r\n      />\r\n      <SFSelect\r\n        label='Bagel'\r\n        options={getOptions()}\r\n        value='Bagel number one'\r\n        error\r\n      />\r\n      <SFSelect\r\n        label='Bagel'\r\n        options={getOptions()}\r\n        value='Bagel number one'\r\n        helperText='Helper Message'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFSelectView };\r\n","import React from 'react';\r\n\r\nimport { SFTextField } from 'sfui';\r\n\r\nconst SFTextFieldsView = () => {\r\n  return (\r\n    <div className='layout-columns one'>\r\n      <SFTextField label='Bagel' />\r\n      <SFTextField label='Bagel' value='This is a bagel' />\r\n      <SFTextField label='Bagel' value='This is a bagel' disabled />\r\n      <SFTextField label='Bagel' value='This is a bagel' error />\r\n      <SFTextField\r\n        label='Bagel'\r\n        value='This is a bagel'\r\n        helperText='Helper Message'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFTextFieldsView };\r\n","import React from 'react';\r\n\r\nimport { SFTextField } from 'sfui';\r\n\r\nconst SFTextFieldsMultilineView = () => {\r\n  return (\r\n    <div className='layout-columns one'>\r\n      <SFTextField multiline label='Bagel' />\r\n      <SFTextField\r\n        multiline\r\n        label='Bagel'\r\n        value='Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lobortis a erat eu mattis. \r\n    Donec fringilla molestie justo pulvinar dignissim. Pellentesque sit amet ex a velit maximus aliquet sit amet id justo.\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lobortis a erat eu mattis.\r\n     Donec fringilla molestie justo pulvinar dignissim. Pellentesque sit amet ex a velit maximus aliquet sit amet id justo.'\r\n      />\r\n      <SFTextField\r\n        multiline\r\n        label='Bagel'\r\n        value='Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lobortis a erat eu mattis. \r\n    Donec fringilla molestie justo pulvinar dignissim. Pellentesque sit amet ex a velit maximus aliquet sit amet id justo.\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lobortis a erat eu mattis.\r\n     Donec fringilla molestie justo pulvinar dignissim. Pellentesque sit amet ex a velit maximus aliquet sit amet id justo.'\r\n        disabled\r\n      />\r\n      <SFTextField\r\n        multiline\r\n        label='Bagel'\r\n        value='Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lobortis a erat eu mattis. \r\n    Donec fringilla molestie justo pulvinar dignissim. Pellentesque sit amet ex a velit maximus aliquet sit amet id justo.\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lobortis a erat eu mattis.\r\n     Donec fringilla molestie justo pulvinar dignissim. Pellentesque sit amet ex a velit maximus aliquet sit amet id justo.'\r\n        error\r\n      />\r\n      <SFTextField\r\n        multiline\r\n        label='Bagel'\r\n        value='Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lobortis a erat eu mattis. \r\n    Donec fringilla molestie justo pulvinar dignissim. Pellentesque sit amet ex a velit maximus aliquet sit amet id justo.\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris lobortis a erat eu mattis.\r\n     Donec fringilla molestie justo pulvinar dignissim. Pellentesque sit amet ex a velit maximus aliquet sit amet id justo.'\r\n        helperText='Helper Message'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { SFTextFieldsMultilineView };\r\n","import React, { useState } from 'react';\r\n\r\nimport {\r\n  SFThemeProvider,\r\n  createSFTheme,\r\n  SFTheme,\r\n  SFPaper,\r\n  SFSwitch,\r\n  useSFMediaQuery,\r\n  SFStylesProvider\r\n} from 'sfui';\r\n\r\nimport { SFButtonsView } from './ButtonsView/ButtonsView';\r\nimport { SFCheckboxesView } from './CheckboxesView/CheckboxesView';\r\nimport { SFDatePickerView } from './DatePickerView/DatePickerView';\r\nimport { SFIconButtonView } from './IconButtonView/IconButtonView';\r\nimport { SFLinksView } from './LinksView/LinksView';\r\nimport { SFMultiSelectView } from './MultiSelectView/MultiSelectView';\r\nimport { SFRadioView } from './RadioView/RadioView';\r\nimport { SFRadioGroupView } from './RadioGroupView/RadioGroupView';\r\nimport { SFSwitchesView } from './SwitchesView/SwitchesView';\r\nimport { SFSelectView } from './SelectView/SelectView';\r\nimport { SFTextFieldsView } from './TextFieldsView/TextFieldsView';\r\nimport { SFTextFieldsMultilineView } from './TextFieldsMultilineView/TextFieldsMultilineView';\r\n\r\nconst App = () => {\r\n  const [nightMode, setNightMode] = useState(false);\r\n  const prefersDarkMode: boolean = useSFMediaQuery(\r\n    '(prefers-color-scheme: dark)'\r\n  );\r\n  const switchLabel = nightMode === true ? 'Day Mode' : 'Night Mode';\r\n\r\n  let theme: SFTheme = createSFTheme(\r\n    prefersDarkMode || nightMode ? 'night' : 'day'\r\n  );\r\n\r\n  const toggleSwitch = () => {\r\n    setNightMode((value) => !value);\r\n  };\r\n\r\n  return (\r\n    <SFThemeProvider theme={theme}>\r\n      <SFStylesProvider injectFirst>\r\n        <SFPaper\r\n          style={{\r\n            backgroundColor: theme.palette.background.default\r\n          }}\r\n        >\r\n          <div className='layout-body'>\r\n            <h1 className='text text-header'>\r\n              SmartForce UI Library{' '}\r\n              <SFSwitch\r\n                label={switchLabel}\r\n                checked={nightMode}\r\n                onChange={toggleSwitch}\r\n              />\r\n            </h1>\r\n\r\n            <hr\r\n              className='contentDivider'\r\n              style={{ borderColor: theme.palette.primary.main }}\r\n            />\r\n\r\n            <div className='layout'>\r\n              <div className='layout-content'>\r\n                <h2 className='text-title'>Buttons</h2>\r\n                <SFButtonsView />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='layout'>\r\n              <div className='layout-columns five'>\r\n                <div className='layout-content'>\r\n                  <h2 className='text-content'>Icon button</h2>\r\n                  <SFIconButtonView />\r\n                </div>\r\n                <div className='layout-content'>\r\n                  <h2 className='text-content'>Checkboxes</h2>\r\n                  <SFCheckboxesView />\r\n                </div>\r\n                <div className='layout-content'>\r\n                  <h2 className='text-content'>Radio</h2>\r\n                  <SFRadioView />\r\n                </div>\r\n                <div className='layout-content'>\r\n                  <h2 className='text-content'>Radio Group</h2>\r\n                  <SFRadioGroupView />\r\n                </div>\r\n                <div className='layout-content'>\r\n                  <h2 className='text-content'>Switches</h2>\r\n                  <SFSwitchesView />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='layout'>\r\n              <div className='layout-columns two'>\r\n                <div className='layout-content'>\r\n                  <h1 className='text-content'>Links</h1>\r\n                  <SFLinksView />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='layout'>\r\n              <div className='layout-columns two'>\r\n                <div className='layout-content large'>\r\n                  <h1 className='text-content'>Text Fields</h1>\r\n                  <SFTextFieldsView />\r\n                </div>\r\n                <div className='layout-content large'>\r\n                  <h1 className='text-content'>Date Pickers</h1>\r\n                  <SFDatePickerView />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='layout'>\r\n              <div className='layout-columns two'>\r\n                <div className='layout-content large'>\r\n                  <h1 className='text-content'>Text field multiline</h1>\r\n                  <SFTextFieldsMultilineView />\r\n                </div>\r\n                <div className='layout-content large'>\r\n                  <h1 className='text-content'>Simple select</h1>\r\n                  <SFSelectView />\r\n                  <h1 className='text-content'>Multiple select</h1>\r\n                  <SFMultiSelectView />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='layout'></div>\r\n          </div>\r\n        </SFPaper>\r\n      </SFStylesProvider>\r\n    </SFThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import './index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","export interface SFColorProps {\r\n  A100?: string;\r\n  A200?: string;\r\n  A400?: string;\r\n  A700?: string;\r\n  50: string;\r\n  100: string;\r\n  200: string;\r\n  300: string;\r\n  400: string;\r\n  500: string;\r\n  600: string;\r\n  700: string;\r\n  800: string;\r\n  900: string;\r\n}\r\n\r\nconst SFBlue: SFColorProps = {\r\n  50: '#E5F6FF',\r\n  100: '#CCEBFF',\r\n  200: '#80C6FF',\r\n  300: '#5CADFF',\r\n  400: '#338FFF',\r\n  500: '#0066FF',\r\n  600: '#0050E6',\r\n  700: '#003DCC',\r\n  800: '#002699',\r\n  900: '#001466'\r\n};\r\n\r\nconst SFRed: SFColorProps = {\r\n  50: '#FCEEEF',\r\n  100: '#F9DCDE',\r\n  200: '#F0A8AD',\r\n  300: '#EB8E95',\r\n  400: '#E7747C',\r\n  500: '#DB343E',\r\n  600: '#C7232E',\r\n  700: '#AD1F29',\r\n  800: '#821724',\r\n  900: '#5F111E'\r\n};\r\n\r\nconst SFGrey: SFColorProps = {\r\n  A100: '#CCCCCC',\r\n  A200: '#B2B2B2',\r\n  A400: '#333333',\r\n  A700: '#666666',\r\n  50: '#F2F2F2',\r\n  100: '#E5E5E5',\r\n  200: '#CCCCCC',\r\n  300: '#B2B2B2',\r\n  400: '#999999',\r\n  500: '#808080',\r\n  600: '#666666',\r\n  700: '#4D4D4D',\r\n  800: '#333333',\r\n  900: '#1A1A1A'\r\n};\r\n\r\nconst SFBlueMainLight = SFBlue[500];\r\nconst SFBlueMainDark = SFBlue[200];\r\n\r\nconst SFRedMainLight = SFRed[700];\r\nconst SFRedMainDark = SFRed[200];\r\n\r\nconst SFGreyMainLight = SFGrey[600];\r\nconst SFGreyMainDark = SFGrey[400];\r\n\r\nconst SFBackgroundLight = '#FAFAFA';\r\nconst SFBackgroundDark = '#121212';\r\n\r\nconst SFSurfaceLight = '#FFFFFF';\r\nconst SFSurfaceDark = '#1F1F1F';\r\n\r\nconst SFTextWhite = '#FFFFFF';\r\nconst SFTextBlack = '#1A1A1A';\r\n\r\nexport {\r\n  SFBlue,\r\n  SFBlueMainLight,\r\n  SFBlueMainDark,\r\n  SFRed,\r\n  SFRedMainLight,\r\n  SFRedMainDark,\r\n  SFGrey,\r\n  SFGreyMainLight,\r\n  SFGreyMainDark,\r\n  SFBackgroundLight,\r\n  SFBackgroundDark,\r\n  SFSurfaceLight,\r\n  SFSurfaceDark,\r\n  SFTextWhite,\r\n  SFTextBlack\r\n};\r\n","import { withStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { SFGrey } from '../../../SFColors/SFColors';\r\n\r\nexport interface ButtonMixinProps {\r\n  contained: {\r\n    light: {\r\n      color: string;\r\n      backgroundColor: string;\r\n      backgroundColorHover: string;\r\n      backgroundColorActive: string;\r\n      backgroundColorDisabled: string;\r\n    };\r\n    dark: {\r\n      color: string;\r\n      backgroundColor: string;\r\n      backgroundColorHover: string;\r\n      backgroundColorActive: string;\r\n      backgroundColorDisabled: string;\r\n    };\r\n  };\r\n  outlined: {\r\n    light: {\r\n      color: string;\r\n      colorHover: string;\r\n      colorActive: string;\r\n      backgroundColor: string;\r\n      backgroundColorHover: string;\r\n      backgroundColorActive: string;\r\n      backgroundColorDisabled: string;\r\n      borderColor: string;\r\n      borderColorHover: string;\r\n      borderColorActive: string;\r\n    };\r\n    dark: {\r\n      color: string;\r\n      colorHover: string;\r\n      colorActive: string;\r\n      backgroundColor: string;\r\n      backgroundColorHover: string;\r\n      backgroundColorActive: string;\r\n      backgroundColorDisabled: string;\r\n      borderColor: string;\r\n      borderColorHover: string;\r\n      borderColorActive: string;\r\n    };\r\n  };\r\n  text: {\r\n    light: {\r\n      color: string;\r\n      colorHover: string;\r\n      colorActive: string;\r\n      backgroundColor: string;\r\n      backgroundColorHover: string;\r\n      backgroundColorActive: string;\r\n      backgroundColorDisabled: string;\r\n    };\r\n    dark: {\r\n      color: string;\r\n      colorHover: string;\r\n      colorActive: string;\r\n      backgroundColor: string;\r\n      backgroundColorHover: string;\r\n      backgroundColorActive: string;\r\n      backgroundColorDisabled: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport default function ButtonMixin(sfButtonConfig: ButtonMixinProps): any {\r\n  return withStyles((theme: Theme) => ({\r\n    root: {\r\n      color: sfButtonConfig.contained[theme.palette.type].color,\r\n      backgroundColor:\r\n        sfButtonConfig.contained[theme.palette.type].backgroundColor,\r\n      '&:hover': {\r\n        backgroundColor:\r\n          sfButtonConfig.contained[theme.palette.type].backgroundColorHover\r\n      },\r\n      '&:active': {\r\n        backgroundColor:\r\n          sfButtonConfig.contained[theme.palette.type].backgroundColorActive\r\n      },\r\n      '&$disabled': {\r\n        color: theme.palette.type === 'light' ? SFGrey[400] : SFGrey[600],\r\n        backgroundColor:\r\n          theme.palette.type === 'light' ? SFGrey[100] : SFGrey[800]\r\n      }\r\n    },\r\n    disabled: {\r\n      color: theme.palette.type === 'light' ? SFGrey[400] : SFGrey[600],\r\n      backgroundColor:\r\n        theme.palette.type === 'light' ? SFGrey[100] : SFGrey[800]\r\n    },\r\n    outlined: {\r\n      color: sfButtonConfig.outlined[theme.palette.type].color,\r\n      borderColor: sfButtonConfig.outlined[theme.palette.type].borderColor,\r\n      backgroundColor:\r\n        sfButtonConfig.outlined[theme.palette.type].backgroundColor,\r\n      '&:hover': {\r\n        color: sfButtonConfig.outlined[theme.palette.type].colorHover,\r\n        borderColor:\r\n          sfButtonConfig.outlined[theme.palette.type].borderColorHover,\r\n        backgroundColor:\r\n          sfButtonConfig.outlined[theme.palette.type].backgroundColorHover\r\n      },\r\n      '&:active': {\r\n        color: sfButtonConfig.outlined[theme.palette.type].colorActive,\r\n        borderColor:\r\n          sfButtonConfig.outlined[theme.palette.type].borderColorActive,\r\n        backgroundColor:\r\n          sfButtonConfig.outlined[theme.palette.type].backgroundColorActive\r\n      },\r\n      '&$disabled': {\r\n        color: theme.palette.type === 'light' ? SFGrey[400] : SFGrey[600],\r\n        backgroundColor: 'transparent',\r\n        borderColor: theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]\r\n      }\r\n    },\r\n    text: {\r\n      color: sfButtonConfig.text[theme.palette.type].color,\r\n      backgroundColor: sfButtonConfig.text[theme.palette.type].backgroundColor,\r\n      border: 'none',\r\n      '&:hover': {\r\n        color: sfButtonConfig.text[theme.palette.type].colorHover,\r\n        backgroundColor:\r\n          sfButtonConfig.text[theme.palette.type].backgroundColorHover,\r\n        border: 'none'\r\n      },\r\n      '&:active': {\r\n        color: sfButtonConfig.text[theme.palette.type].colorActive,\r\n        backgroundColor:\r\n          sfButtonConfig.text[theme.palette.type].backgroundColorActive,\r\n        border: 'none'\r\n      },\r\n      '&$disabled': {\r\n        color: theme.palette.type === 'light' ? SFGrey[400] : SFGrey[600],\r\n        backgroundColor: 'transparent',\r\n        borderColor: 'none'\r\n      }\r\n    }\r\n  }))(Button);\r\n}\r\n","import ButtonMixin, { ButtonMixinProps } from './ButtonMixin';\r\nimport { SFBlue, SFGrey } from '../../../SFColors/SFColors';\r\n\r\nconst sfButtonConfig: ButtonMixinProps = {\r\n  contained: {\r\n    light: {\r\n      color: '#FFFFFF',\r\n      backgroundColor: SFBlue[500],\r\n      backgroundColorHover: SFBlue[700],\r\n      backgroundColorActive: SFBlue[800],\r\n      backgroundColorDisabled: SFGrey[100]\r\n    },\r\n    dark: {\r\n      color: '#1A1A1A',\r\n      backgroundColor: SFBlue[200],\r\n      backgroundColorHover: SFBlue[300],\r\n      backgroundColorActive: SFBlue[400],\r\n      backgroundColorDisabled: SFGrey[800]\r\n    }\r\n  },\r\n  outlined: {\r\n    light: {\r\n      color: SFBlue[500],\r\n      colorHover: SFBlue[700],\r\n      colorActive: SFBlue[800],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(204, 235, 255, 0.4)',\r\n      backgroundColorActive: 'rgba(204, 235, 255, 0.6)',\r\n      backgroundColorDisabled: SFGrey[100],\r\n      borderColor: SFBlue[500],\r\n      borderColorHover: SFBlue[700],\r\n      borderColorActive: SFBlue[800]\r\n    },\r\n    dark: {\r\n      color: SFBlue[200],\r\n      colorHover: SFBlue[300],\r\n      colorActive: SFBlue[400],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(128, 198, 255, 0.2)',\r\n      backgroundColorActive: 'rgba(128, 198, 255, 0.1)',\r\n      backgroundColorDisabled: SFGrey[800],\r\n      borderColor: SFBlue[200],\r\n      borderColorHover: SFBlue[300],\r\n      borderColorActive: SFBlue[400]\r\n    }\r\n  },\r\n  text: {\r\n    light: {\r\n      color: SFBlue[500],\r\n      colorHover: SFBlue[700],\r\n      colorActive: SFBlue[800],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(204, 235, 255, 0.4)',\r\n      backgroundColorActive: 'rgba(204, 235, 255, 0.6)',\r\n      backgroundColorDisabled: SFGrey[100]\r\n    },\r\n    dark: {\r\n      color: SFBlue[200],\r\n      colorHover: SFBlue[300],\r\n      colorActive: SFBlue[400],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(128, 198, 255, 0.2)',\r\n      backgroundColorActive: 'rgba(128, 198, 255, 0.1)',\r\n      backgroundColorDisabled: SFGrey[800]\r\n    }\r\n  }\r\n};\r\n\r\nconst BlueButton = ButtonMixin(sfButtonConfig);\r\n\r\nexport default BlueButton;\r\n","import ButtonMixin, { ButtonMixinProps } from './ButtonMixin';\r\nimport { SFRed, SFGrey } from '../../../SFColors/SFColors';\r\n\r\nconst sfButtonConfig: ButtonMixinProps = {\r\n  contained: {\r\n    light: {\r\n      color: '#FFFFFF',\r\n      backgroundColor: SFRed[700],\r\n      backgroundColorHover: SFRed[800],\r\n      backgroundColorActive: SFRed[900],\r\n      backgroundColorDisabled: SFGrey[100]\r\n    },\r\n    dark: {\r\n      color: '#1A1A1A',\r\n      backgroundColor: SFRed[200],\r\n      backgroundColorHover: SFRed[300],\r\n      backgroundColorActive: SFRed[400],\r\n      backgroundColorDisabled: SFGrey[800]\r\n    }\r\n  },\r\n  outlined: {\r\n    light: {\r\n      color: SFRed[700],\r\n      colorHover: SFRed[800],\r\n      colorActive: SFRed[900],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(249, 220, 222, 0.4)',\r\n      backgroundColorActive: 'rgba(249, 220, 222, 0.7)',\r\n      backgroundColorDisabled: SFGrey[100],\r\n      borderColor: SFRed[700],\r\n      borderColorHover: SFRed[800],\r\n      borderColorActive: SFRed[900]\r\n    },\r\n    dark: {\r\n      color: SFRed[200],\r\n      colorHover: SFRed[300],\r\n      colorActive: SFRed[400],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(240, 168, 173, 0.2)',\r\n      backgroundColorActive: 'rgba(240, 168, 173, 0.1)',\r\n      backgroundColorDisabled: SFGrey[800],\r\n      borderColor: SFRed[200],\r\n      borderColorHover: SFRed[300],\r\n      borderColorActive: SFRed[400]\r\n    }\r\n  },\r\n  text: {\r\n    light: {\r\n      color: SFRed[700],\r\n      colorHover: SFRed[800],\r\n      colorActive: SFRed[900],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(249, 220, 222, 0.4)',\r\n      backgroundColorActive: 'rgba(249, 220, 222, 0.7)',\r\n      backgroundColorDisabled: SFGrey[100]\r\n    },\r\n    dark: {\r\n      color: SFRed[200],\r\n      colorHover: SFRed[300],\r\n      colorActive: SFRed[400],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(240, 168, 173, 0.2)',\r\n      backgroundColorActive: 'rgba(240, 168, 173, 0.1)',\r\n      backgroundColorDisabled: SFGrey[800]\r\n    }\r\n  }\r\n};\r\n\r\nconst RedButton = ButtonMixin(sfButtonConfig);\r\n\r\nexport default RedButton;\r\n","import ButtonMixin, { ButtonMixinProps } from './ButtonMixin';\r\nimport { SFGrey } from '../../../SFColors/SFColors';\r\n\r\nconst sfButtonConfig: ButtonMixinProps = {\r\n  contained: {\r\n    light: {\r\n      color: '#1A1A1A',\r\n      backgroundColor: SFGrey[100],\r\n      backgroundColorHover: SFGrey[200],\r\n      backgroundColorActive: SFGrey[300],\r\n      backgroundColorDisabled: SFGrey[100]\r\n    },\r\n    dark: {\r\n      color: '#F2F2F2',\r\n      backgroundColor: SFGrey[500],\r\n      backgroundColorHover: SFGrey[600],\r\n      backgroundColorActive: SFGrey[700],\r\n      backgroundColorDisabled: SFGrey[800]\r\n    }\r\n  },\r\n  outlined: {\r\n    light: {\r\n      color: '#1A1A1A',\r\n      colorHover: SFGrey[900],\r\n      colorActive: SFGrey[900],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(204, 204, 204, 0.3)',\r\n      backgroundColorActive: 'rgba(204, 204, 204, 0.5)',\r\n      backgroundColorDisabled: SFGrey[100],\r\n      borderColor: SFGrey[400],\r\n      borderColorHover: SFGrey[600],\r\n      borderColorActive: SFGrey[800]\r\n    },\r\n    dark: {\r\n      color: '#F2F2F2',\r\n      colorHover: SFGrey[50],\r\n      colorActive: SFGrey[50],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(128, 128, 128, 0.3)',\r\n      backgroundColorActive: 'rgba(128, 128, 128, 0.2)',\r\n      backgroundColorDisabled: SFGrey[800],\r\n      borderColor: SFGrey[500],\r\n      borderColorHover: SFGrey[600],\r\n      borderColorActive: SFGrey[700]\r\n    }\r\n  },\r\n  text: {\r\n    light: {\r\n      color: '#1A1A1A',\r\n      colorHover: SFGrey[900],\r\n      colorActive: SFGrey[900],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(204, 204, 204, 0.3)',\r\n      backgroundColorActive: 'rgba(204, 204, 204, 0.5)',\r\n      backgroundColorDisabled: SFGrey[100]\r\n    },\r\n    dark: {\r\n      color: '#F2F2F2',\r\n      colorHover: SFGrey[50],\r\n      colorActive: SFGrey[50],\r\n      backgroundColor: 'transparent',\r\n      backgroundColorHover: 'rgba(128, 128, 128, 0.3)',\r\n      backgroundColorActive: 'rgba(128, 128, 128, 0.2)',\r\n      backgroundColorDisabled: SFGrey[800]\r\n    }\r\n  }\r\n};\r\n\r\nconst GreyButton = ButtonMixin(sfButtonConfig);\r\n\r\nexport default GreyButton;\r\n","import * as React from 'react';\r\nimport Button, { ButtonProps } from '@material-ui/core/Button';\r\n\r\nimport BlueButton from './CustomButtons/BlueButton';\r\nimport RedButton from './CustomButtons/RedButton';\r\nimport GreyButton from './CustomButtons/GreyButton';\r\n\r\ninterface ButtonInnerProps {\r\n  padding?: string;\r\n  size?: string;\r\n  lineHeight?: string;\r\n  height?: string;\r\n}\r\n\r\nconst getButtonInnerProps = (size?: string): ButtonInnerProps => {\r\n  const result: ButtonInnerProps = {};\r\n  switch (size) {\r\n    case 'small':\r\n      result.padding = '4px 10px';\r\n      result.size = '13px';\r\n      result.lineHeight = '22px';\r\n      result.height = '30px';\r\n      break;\r\n    case 'large':\r\n      result.padding = '8px 22px';\r\n      result.size = '15px';\r\n      result.lineHeight = '26px';\r\n      result.height = '42px';\r\n      break;\r\n    default:\r\n      result.padding = '6px 16px';\r\n      result.size = '14px';\r\n      result.lineHeight = '24px';\r\n      result.height = '36px';\r\n      break;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport interface SFButtonProps extends ButtonProps {\r\n  sfColor?: 'blue' | 'red' | 'grey';\r\n}\r\n\r\nexport const SFButton = ({\r\n  variant = 'contained',\r\n  color = 'primary',\r\n  disableRipple = true,\r\n  disableElevation = true,\r\n  size = 'medium',\r\n  sfColor,\r\n  ...props\r\n}: SFButtonProps): React.ReactElement<SFButtonProps> => {\r\n  let button: JSX.Element;\r\n  const ButtonInnerProps: ButtonInnerProps = getButtonInnerProps(size);\r\n  const ButtonInnerStyle = {\r\n    padding: ButtonInnerProps.padding,\r\n    fontSize: ButtonInnerProps.size,\r\n    lineHeight: ButtonInnerProps.lineHeight,\r\n    height: ButtonInnerProps.height\r\n  };\r\n\r\n  switch (sfColor) {\r\n    case 'blue':\r\n      button = (\r\n        <BlueButton\r\n          {...props}\r\n          variant={variant}\r\n          disableElevation={disableElevation}\r\n          disableRipple={disableRipple}\r\n          style={ButtonInnerStyle}\r\n        />\r\n      );\r\n      break;\r\n    case 'red':\r\n      button = (\r\n        <RedButton\r\n          {...props}\r\n          variant={variant}\r\n          disableElevation={disableElevation}\r\n          disableRipple={disableRipple}\r\n          style={ButtonInnerStyle}\r\n        />\r\n      );\r\n      break;\r\n    case 'grey':\r\n      button = (\r\n        <GreyButton\r\n          {...props}\r\n          variant={variant}\r\n          disableElevation={disableElevation}\r\n          disableRipple={disableRipple}\r\n          style={ButtonInnerStyle}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      button = (\r\n        <Button\r\n          {...props}\r\n          variant={variant}\r\n          color={color}\r\n          disableElevation={disableElevation}\r\n          disableRipple={disableRipple}\r\n          style={ButtonInnerStyle}\r\n        />\r\n      );\r\n  }\r\n\r\n  return button;\r\n};\r\n","import * as React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\r\n\r\nconst StyledPaper = withStyles({\r\n  root: {\r\n    borderRadius: 0,\r\n    height: '100%'\r\n  }\r\n})(Paper);\r\n\r\nexport interface SFPaperProps extends PaperProps {}\r\n\r\nexport const SFPaper = ({\r\n  elevation = 0,\r\n  ...props\r\n}: SFPaperProps): React.ReactElement<SFPaperProps> => {\r\n  return <StyledPaper elevation={elevation} {...props} />;\r\n};\r\n","import * as React from 'react';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport FormControlLabel, {\r\n  FormControlLabelProps\r\n} from '@material-ui/core/FormControlLabel';\r\nimport { SFGrey } from '../../SFColors/SFColors';\r\n\r\nconst StyledFromControlLabel = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: `${theme.palette.type === 'light' ? SFGrey[900] : SFGrey[50]}`,\r\n    '&.Mui-disabled': {\r\n      color: `${theme.palette.type === 'light' ? SFGrey[600] : SFGrey[400]}`\r\n    }\r\n  }\r\n}))(FormControlLabel);\r\n\r\nexport interface SFFormControlLabelProps extends FormControlLabelProps {}\r\n\r\nexport const SFFormControlLabel = (\r\n  props: SFFormControlLabelProps\r\n): React.ReactElement<SFFormControlLabelProps> => {\r\n  return <StyledFromControlLabel {...props} />;\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { SFPaper } from '../SFPaper/SFPaper';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SFGrey } from '../../SFColors/SFColors';\r\n\r\nconst cardStyles = makeStyles({\r\n  root: {\r\n    position: 'relative',\r\n    padding: '30px',\r\n    borderRadius: '2px',\r\n    '& .loader': {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      '&.top': {\r\n        flexDirection: 'row',\r\n        '& p': {\r\n          margin: '0px 15px'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst usePaperStyles = makeStyles({\r\n  root: {\r\n    border: `1px solid ${SFGrey[100]}`,\r\n    borderRadius: '2px'\r\n  }\r\n});\r\n\r\nexport type sfElevations = 0 | 1 | 2 | 3 | 4 | 6 | 8 | 9 | 12 | 16 | 24;\r\n\r\nexport interface SFCardProps {\r\n  sfElevation?: sfElevations;\r\n  className?: string;\r\n  isLoading?: boolean;\r\n  loadingAtTop?: boolean;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nexport const SFCard = ({\r\n  sfElevation = 0,\r\n  className = '',\r\n  isLoading = false,\r\n  loadingAtTop = false,\r\n  children\r\n}: SFCardProps): React.ReactElement<SFCardProps> => {\r\n  const externalClass: string = className || '';\r\n  const customCardStyles: Record<'root', string> = cardStyles();\r\n  const styledPaper: Record<'root', string> = usePaperStyles();\r\n\r\n  return (\r\n    <SFPaper\r\n      elevation={sfElevation}\r\n      classes={sfElevation === 0 ? styledPaper : undefined}\r\n    >\r\n      <div className={`${customCardStyles.root} ${externalClass} `}>\r\n        {isLoading === true ? (\r\n          <div\r\n            className={`loader ${loadingAtTop === true ? 'top' : undefined}`}\r\n          >\r\n            <CircularProgress />\r\n            <p>Loading...</p>\r\n          </div>\r\n        ) : (\r\n          children\r\n        )}\r\n      </div>\r\n    </SFPaper>\r\n  );\r\n};\r\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IcomoonReact = exports.iconList = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nexports.iconList = function (iconSet) {\n    var list = [];\n    iconSet.icons.forEach(function (icon) {\n        list.push(icon.properties.name.split(\", \")[0]);\n    });\n    return list;\n};\nfunction getSvg(icon, iconSet, styles, size, className, rest) {\n    var find = function (iconEl) { return iconEl.properties.name.split(\", \").includes(icon); };\n    var currentIcon = iconSet.icons.find(find);\n    var renderPath = function (iconObj) { return function (path, index) {\n        var attrs = (iconObj.attrs && iconObj.attrs[index]) || {};\n        return react_1.default.createElement(\"path\", __assign({ style: styles.path, key: index, d: path }, attrs));\n    }; };\n    if (currentIcon) {\n        return (react_1.default.createElement(\"svg\", __assign({ className: className, style: styles.svg, width: size, height: size, viewBox: \"0 0 \" + (currentIcon.icon.width || \"1024\") + \" 1024\", xmlns: \"http://www.w3.org/2000/svg\" }, rest), currentIcon.icon.paths.map(renderPath(currentIcon.icon))));\n    }\n    console.warn(\"icon \" + icon + \" does not exist.\");\n    return null;\n}\nexports.IcomoonReact = function (props) {\n    var color = props.color, _a = props.size, size = _a === void 0 ? \"100%\" : _a, icon = props.icon, iconSet = props.iconSet, _b = props.className, className = _b === void 0 ? \"\" : _b, _c = props.style, style = _c === void 0 ? {} : _c, rest = __rest(props, [\"color\", \"size\", \"icon\", \"iconSet\", \"className\", \"style\"]);\n    var styles = {\n        svg: __assign({ display: \"inline-block\", verticalAlign: \"middle\" }, style),\n        path: {\n            fill: color\n        }\n    };\n    return getSvg(icon, iconSet, styles, size, className, rest);\n};\nexports.IcomoonReact.displayName = \"IcomoonReact\";\nexports.default = exports.IcomoonReact;\n//# sourceMappingURL=IcomoonReact.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IcomoonReact_1 = require(\"./IcomoonReact/IcomoonReact\");\nvar IcomoonReact_2 = require(\"./IcomoonReact/IcomoonReact\");\nObject.defineProperty(exports, \"iconList\", { enumerable: true, get: function () { return IcomoonReact_2.iconList; } });\nexports.default = IcomoonReact_1.IcomoonReact;\n//# sourceMappingURL=index.js.map","import * as React from 'react';\r\nimport { useTheme, Theme } from '@material-ui/core/styles';\r\nimport { SFGrey } from '../../SFColors/SFColors';\r\nimport IcomoonReact from 'icomoon-react';\r\nimport IconSet from './icons/selection.json';\r\n\r\nexport interface SFIconProps {\r\n  color?: string | undefined;\r\n  size?: string | number | undefined;\r\n  icon: string;\r\n  className?: string | undefined;\r\n  style?: React.CSSProperties | undefined;\r\n  ref?: React.Ref<SVGSVGElement>;\r\n}\r\n\r\nexport const SFIcon = ({\r\n  icon = 'Bell',\r\n  size = 24,\r\n  ...props\r\n}: SFIconProps): React.ReactElement<SFIconProps> => {\r\n  const theme: Theme = useTheme();\r\n  const colorDefault: string =\r\n    theme.palette.type === 'light' ? SFGrey[600] : SFGrey[400];\r\n  const color: string = props.color ? props.color : colorDefault;\r\n\r\n  return (\r\n    <IcomoonReact\r\n      iconSet={IconSet}\r\n      icon={icon}\r\n      size={size}\r\n      color={color}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { withStyles, Theme, useTheme } from '@material-ui/core/styles';\r\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { SFGrey } from '../../SFColors/SFColors';\r\nimport { SFFormControlLabel } from '../SFFormControlLabel/SFFormControlLabel';\r\nimport { SFIcon } from '../SFIcon/SFIcon';\r\n\r\nconst StyledCheckbox = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    color: `${theme.palette.type === 'light' ? SFGrey[600] : SFGrey[400]}`\r\n  },\r\n  colorPrimary: {\r\n    '&:hover': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 204, 204, 0.3)'\r\n          : 'rgba(128, 128, 128, 0.3)'\r\n      }`\r\n    },\r\n    '&:active': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 204, 204, 0.5)'\r\n          : 'rgba(128, 128, 128, 0.2)'\r\n      }`\r\n    },\r\n    '&.Mui-checked:hover': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 235, 255, 0.4)'\r\n          : 'rgba(128, 198, 255, 0.2)'\r\n      }`\r\n    },\r\n    '&.Mui-checked:active': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 235, 255, 0.6)'\r\n          : 'rgba(128, 198, 255, 0.1)'\r\n      }`\r\n    },\r\n    '&.Mui-disabled': {\r\n      color: `${theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]}`\r\n    }\r\n  }\r\n}))(Checkbox);\r\n\r\nconst getIconUncheckedColor = (\r\n  theme: Theme,\r\n  disabled: boolean | undefined\r\n): string => {\r\n  if (disabled) {\r\n    return theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700];\r\n  }\r\n  return theme.palette.type === 'light' ? SFGrey[600] : SFGrey[400];\r\n};\r\n\r\nconst getIconCheckedColor = (\r\n  theme: Theme,\r\n  disabled: boolean | undefined\r\n): string => {\r\n  if (disabled) {\r\n    return theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700];\r\n  }\r\n  return theme.palette.primary.main;\r\n};\r\n\r\nexport interface SFCheckboxProps extends CheckboxProps {\r\n  label?: string;\r\n}\r\n\r\nexport const SFCheckbox = ({\r\n  disableRipple = true,\r\n  label,\r\n  ...props\r\n}: SFCheckboxProps): React.ReactElement<SFCheckboxProps> => {\r\n  const theme: Theme = useTheme();\r\n  const iconCheckedColor: string = getIconCheckedColor(theme, props.disabled);\r\n  const iconUncheckedColor: string = getIconUncheckedColor(\r\n    theme,\r\n    props.disabled\r\n  );\r\n\r\n  return (\r\n    <FormControl>\r\n      <SFFormControlLabel\r\n        control={\r\n          <StyledCheckbox\r\n            {...props}\r\n            color='primary'\r\n            disableRipple={disableRipple}\r\n            icon={\r\n              <SFIcon\r\n                icon='Checkbox-Unselected'\r\n                size={42}\r\n                color={iconUncheckedColor}\r\n              />\r\n            }\r\n            checkedIcon={\r\n              <SFIcon\r\n                icon='Checkbox-Selected'\r\n                size={42}\r\n                color={iconCheckedColor}\r\n              />\r\n            }\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n","export function hexToRgba(hex: string, opacity: number): string | undefined {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n  return result\r\n    ? `rgba(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(\r\n        result[3],\r\n        16\r\n      )}, ${opacity})`\r\n    : undefined;\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles\r\n} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MomentUtils from '@date-io/moment';\r\nimport { SFGrey, SFRed } from '../../SFColors/SFColors';\r\nimport { SFIcon } from '../SFIcon/SFIcon';\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePickerProps\r\n} from '@material-ui/pickers';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nimport { ParsableDate } from '@material-ui/pickers/constants/prop-types';\r\nimport { hexToRgba } from '../../helpers';\r\n\r\nconst useButtonBackgrounds = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: `${\r\n        theme.palette.type !== 'light' ? SFGrey[800] : undefined\r\n      }`\r\n    }\r\n  })\r\n);\r\n\r\nconst usePopOverStyle = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      backgroundColor: `${\r\n        theme.palette.type !== 'light' ? SFGrey[800] : undefined\r\n      }`,\r\n      marginTop: '54px'\r\n    }\r\n  })\r\n);\r\n\r\nconst StyledDatePicker = withStyles((theme: Theme) => ({\r\n  root: {\r\n    boxSizing: 'border-box',\r\n    height: '56px',\r\n    '& .MuiFilledInput-root': {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: `1px solid ${\r\n        theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]\r\n      }`,\r\n      borderRadius: 2,\r\n      boxSizing: 'border-box',\r\n      '&:before': {\r\n        content: `none !important`\r\n      },\r\n      '&:after': {\r\n        content: `none !important`\r\n      },\r\n      '&:hover': {\r\n        borderColor: `${\r\n          theme.palette.type === 'light' ? SFGrey[900] : SFGrey[50]\r\n        }`\r\n      },\r\n      '&:active': {\r\n        '& .MuiFilledInput-input': {\r\n          padding: '26px 11px 7px'\r\n        }\r\n      },\r\n      '&.Mui-focused': {\r\n        '& .MuiFilledInput-input': {\r\n          padding: '26px 11px 7px'\r\n        }\r\n      },\r\n      '&.Mui-error': {\r\n        border: `1px solid ${\r\n          theme.palette.type === 'light' ? SFRed[700] : SFRed[200]\r\n        }`,\r\n        '& .MuiFilledInput-input': {\r\n          padding: '26px 11px 7px'\r\n        }\r\n      },\r\n      '&.Mui-disabled': {\r\n        border: `1px solid ${\r\n          theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]\r\n        }`,\r\n        '& .MuiFilledInput-input': {\r\n          padding: '26px 11px 7px !important'\r\n        }\r\n      },\r\n      '& .MuiFilledInput-input': {\r\n        fontWeight: 400,\r\n        fontSize: '16px',\r\n        padding: '26px 11px 7px',\r\n        '&.Mui-disabled': {\r\n          color: `${theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]}`\r\n        }\r\n      },\r\n      '& .MuiIconButton-root': {\r\n        '&:hover': {\r\n          backgroundColor: `${\r\n            theme.palette.type === 'light'\r\n              ? hexToRgba(SFGrey[200], 0.3)\r\n              : hexToRgba(SFGrey[500], 0.3)\r\n          }`\r\n        },\r\n        '&:active': {\r\n          backgroundColor: `${\r\n            theme.palette.type === 'light'\r\n              ? hexToRgba(SFGrey[200], 0.5)\r\n              : hexToRgba(SFGrey[500], 0.2)\r\n          }`\r\n        }\r\n      }\r\n    },\r\n    '& .MuiInputLabel-filled': {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      '&.MuiInputLabel-shrink': {\r\n        fontSize: '14px',\r\n        lineHeight: '20px',\r\n        transform: `translate(12px, 6px)`,\r\n        color: `${theme.palette.type === 'light' ? SFGrey[400] : SFGrey[600]}`\r\n      },\r\n      '&.Mui-error': {\r\n        color: `${theme.palette.type === 'light' ? SFRed[700] : SFRed[200]}`\r\n      },\r\n      '&.Mui-disabled': {\r\n        color: `${theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]}`\r\n      }\r\n    },\r\n    '& .MuiFormHelperText-root': {\r\n      backgroundColor: 'transparent',\r\n      '&.Mui-error': {\r\n        color: `${theme.palette.type === 'light' ? SFRed[700] : SFRed[200]}`\r\n      }\r\n    }\r\n  }\r\n}))(KeyboardDatePicker);\r\n\r\nexport interface SFDatePickerProps extends Partial<KeyboardDatePickerProps> {}\r\n\r\nexport const SFDatePicker = ({\r\n  value = null,\r\n  ...props\r\n}: SFDatePickerProps): React.ReactElement<KeyboardDatePickerProps> => {\r\n  const [selectedDate, handleDateChange] = React.useState<ParsableDate>(value);\r\n  const popOverStyle: Record<'paper', string> = usePopOverStyle();\r\n  const arrowStyle: Record<'root', string> = useButtonBackgrounds();\r\n  const containerRef = React.createRef<HTMLDivElement>();\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n        <StyledDatePicker\r\n          {...props}\r\n          ref={containerRef}\r\n          disableToolbar\r\n          value={selectedDate}\r\n          variant='inline'\r\n          label='mm/dd/yyyy'\r\n          inputVariant='filled'\r\n          format='MM/DD/YYYY'\r\n          PopoverProps={{\r\n            classes: popOverStyle,\r\n            container: containerRef.current,\r\n            anchorOrigin: { vertical: 'top', horizontal: 'left' },\r\n            transformOrigin: { vertical: 'top', horizontal: 'left' }\r\n          }}\r\n          InputProps={{ readOnly: true }}\r\n          rightArrowButtonProps={{ classes: arrowStyle }}\r\n          rightArrowIcon={<SFIcon icon='Right-2' size='10' />}\r\n          leftArrowButtonProps={{ classes: arrowStyle }}\r\n          leftArrowIcon={<SFIcon icon='Left-2' size='10' />}\r\n          keyboardIcon={<SFIcon icon='Callendar' size='24' />}\r\n          onChange={(date: MaterialUiPickersDate): void => {\r\n            handleDateChange(date);\r\n          }}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    </FormControl>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { useTheme, Theme, withStyles } from '@material-ui/core/styles';\r\nimport { SFGrey } from '../../SFColors/SFColors';\r\nimport { SFIcon } from '../SFIcon/SFIcon';\r\nimport IconButton, { IconButtonProps } from '@material-ui/core/IconButton';\r\n\r\ntype SFSize = 'tiny' | 'small' | 'medium' | 'large';\r\n\r\ninterface IconButtonInnerProps {\r\n  padding?: string;\r\n  size?: string;\r\n}\r\n\r\nconst StyledIconButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    '&:hover': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 204, 204, 0.3)'\r\n          : 'rgba(128, 128, 128, 0.3)'\r\n      }`\r\n    },\r\n    '&:active': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 204, 204, 0.5)'\r\n          : 'rgba(128, 128, 128, 0.2)'\r\n      }`\r\n    }\r\n  }\r\n}))(IconButton);\r\n\r\nconst getIconButtonInnerProps = (size?: SFSize): IconButtonInnerProps => {\r\n  const result: IconButtonInnerProps = {};\r\n  switch (size) {\r\n    case 'tiny':\r\n      result.padding = '4px';\r\n      result.size = '12';\r\n      break;\r\n    case 'small':\r\n      result.padding = '6px';\r\n      result.size = '20';\r\n      break;\r\n    case 'large':\r\n      result.padding = '8px';\r\n      result.size = '32';\r\n      break;\r\n    default:\r\n      result.padding = '6px';\r\n      result.size = '24';\r\n      break;\r\n  }\r\n  return result;\r\n};\r\n\r\nexport interface SFIconButtonProps extends IconButtonProps {\r\n  sfColor?: string | undefined;\r\n  sfSize: SFSize;\r\n  sfIcon: string;\r\n}\r\n\r\nexport const SFIconButton = ({\r\n  sfColor,\r\n  sfSize = 'medium',\r\n  sfIcon = 'Bell',\r\n  ...props\r\n}: SFIconButtonProps): React.ReactElement<SFIconButtonProps> => {\r\n  const theme: Theme = useTheme();\r\n  const isThemeLight: boolean = theme.palette.type === 'light';\r\n  const iconDefaultColor: string = isThemeLight ? SFGrey[600] : SFGrey[400];\r\n  const disabledColor: string = isThemeLight ? SFGrey[200] : SFGrey[700];\r\n  const colorPicked: string = sfColor || iconDefaultColor;\r\n  const iconButtonInnerProps: IconButtonInnerProps = getIconButtonInnerProps(\r\n    sfSize\r\n  );\r\n\r\n  return (\r\n    <StyledIconButton\r\n      {...props}\r\n      disableRipple\r\n      style={{ padding: iconButtonInnerProps.padding }}\r\n    >\r\n      <SFIcon\r\n        icon={sfIcon}\r\n        size={iconButtonInnerProps.size}\r\n        color={props.disabled ? disabledColor : colorPicked}\r\n      />\r\n    </StyledIconButton>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Theme, withStyles } from '@material-ui/core/styles';\r\nimport Link, { LinkProps } from '@material-ui/core/Link';\r\nimport { SFGrey } from '../../SFColors/SFColors';\r\n\r\ntype SFSize = 'small' | 'medium';\r\nconst StyledLink = withStyles((theme: Theme) => ({\r\n  root: {\r\n    '&.MuiTypography-colorInherit': {\r\n      color: `${theme.palette.type === 'light' ? SFGrey[900] : SFGrey[50]}`\r\n    },\r\n    '&.MuiLink-root': {\r\n      cursor: 'pointer'\r\n    }\r\n  }\r\n}))(Link);\r\n\r\nconst getLinkSize = (size?: SFSize): string => {\r\n  let fontSize: string;\r\n  switch (size) {\r\n    case 'small':\r\n      fontSize = '14px';\r\n      break;\r\n    default:\r\n      fontSize = '16px';\r\n      break;\r\n  }\r\n  return fontSize;\r\n};\r\n\r\nexport interface SFLinkProps extends LinkProps {\r\n  sfSize: SFSize;\r\n}\r\n\r\nexport const SFLink = ({\r\n  sfSize = 'medium',\r\n  color,\r\n  ...props\r\n}: SFLinkProps): React.ReactElement<SFLinkProps> => {\r\n  const sfColor = color !== 'primary' ? 'inherit' : 'primary';\r\n  return (\r\n    <StyledLink\r\n      {...props}\r\n      style={{\r\n        fontSize: getLinkSize(sfSize)\r\n      }}\r\n      color={sfColor}\r\n    />\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Theme, withStyles } from '@material-ui/core/styles';\r\nimport TextField, { FilledTextFieldProps } from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { SFGrey, SFRed } from '../../SFColors/SFColors';\r\n\r\nconst StyledTextField = withStyles((theme: Theme) => ({\r\n  root: {\r\n    '& .MuiInputBase-root': {\r\n      backgroundColor: theme.palette.background.paper,\r\n      '&.Mui-focused': {\r\n        backgroundColor: theme.palette.background.paper\r\n      }\r\n    },\r\n    boxSizing: 'border-box',\r\n    '& .MuiFilledInput-root': {\r\n      border: `1px solid ${\r\n        theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]\r\n      }`,\r\n      borderRadius: 2,\r\n      boxSizing: 'border-box',\r\n      '&:before': {\r\n        content: `none !important`\r\n      },\r\n      '&:after': {\r\n        content: `none !important`\r\n      },\r\n      '&:hover': {\r\n        borderColor: theme.palette.type === 'light' ? SFGrey[900] : SFGrey[50]\r\n      },\r\n      '&:active': {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n        '& .MuiFilledInput-input': {\r\n          padding: '26px 11px 7px'\r\n        }\r\n      },\r\n      '&.Mui-focused': {\r\n        border: `2px solid ${theme.palette.primary.main}`,\r\n        '& .MuiFilledInput-input': {\r\n          padding: '26px 11px 7px'\r\n        }\r\n      },\r\n      '&.Mui-error': {\r\n        border: `2px solid ${\r\n          theme.palette.type === 'light' ? SFRed[700] : SFRed[200]\r\n        }`,\r\n        '& .MuiFilledInput-input': {\r\n          padding: '26px 11px 7px'\r\n        }\r\n      },\r\n      '&.Mui-disabled': {\r\n        border: `1px solid ${\r\n          theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]\r\n        }`,\r\n        '& .MuiFilledInput-input': {\r\n          padding: '27px 12px 8px !important'\r\n        }\r\n      },\r\n      '&.MuiFilledInput-multiline': {\r\n        '&.Mui-focused, &:active': {\r\n          padding: '26px 11px 7px'\r\n        },\r\n        padding: '27px 12px 8px',\r\n        '& textarea.MuiFilledInput-input': {\r\n          padding: 0\r\n        }\r\n      },\r\n      '& .MuiFilledInput-input': {\r\n        fontWeight: 400,\r\n        fontSize: '16px',\r\n        padding: '27px 12px 8px',\r\n        '&.Mui-disabled': {\r\n          color: theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]\r\n        }\r\n      },\r\n      '& .MuiSelect-select:focus': {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    },\r\n    '& .MuiInputLabel-filled': {\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      '&.MuiInputLabel-shrink': {\r\n        fontSize: '14px',\r\n        lineHeight: '20px',\r\n        transform: `translate(12px, 6px)`\r\n      },\r\n      '&.Mui-error': {\r\n        color: theme.palette.type === 'light' ? SFRed[700] : SFRed[200]\r\n      },\r\n      '&.Mui-disabled': {\r\n        color: theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]\r\n      }\r\n    },\r\n    '& .MuiFormHelperText-root': {\r\n      '&.Mui-error': {\r\n        color: theme.palette.type === 'light' ? SFRed[700] : SFRed[200]\r\n      }\r\n    }\r\n  }\r\n}))(TextField);\r\n\r\nexport interface SFTextFieldProps extends Partial<FilledTextFieldProps> {\r\n  variant?: 'filled';\r\n}\r\n\r\nexport const SFTextField = ({\r\n  variant = 'filled',\r\n  rows = 4,\r\n  color,\r\n  ...props\r\n}: SFTextFieldProps): React.ReactElement<SFTextFieldProps> => {\r\n  color = 'primary';\r\n  return (\r\n    <FormControl fullWidth>\r\n      <StyledTextField {...props} color={color} variant={variant} rows={rows} />\r\n    </FormControl>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { withStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  FormControl,\r\n  MenuItem,\r\n  ListItemText,\r\n  SelectProps\r\n} from '@material-ui/core';\r\nimport { SFTextField } from '../SFTextField/SFTextField';\r\nimport { SFIcon } from '../SFIcon/SFIcon';\r\nimport { SFCheckbox } from '../SFCheckbox/SFCheckbox';\r\nimport { hexToRgba } from '../../helpers';\r\nimport { SFGrey } from '../../SFColors/SFColors';\r\n\r\nexport interface SFMultiSelectOption {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst StyledSelect = withStyles(() => ({\r\n  root: {\r\n    '& svg': {\r\n      position: 'absolute',\r\n      right: 18,\r\n      pointerEvents: 'none',\r\n      top: 'auto'\r\n    }\r\n  }\r\n}))(SFTextField);\r\n\r\nconst StyledMenuItem = withStyles((theme: Theme) => ({\r\n  root: {\r\n    '&:hover': {\r\n      background:\r\n        theme.palette.type === 'light'\r\n          ? hexToRgba(SFGrey[200], 0.3)\r\n          : hexToRgba(SFGrey[500], 0.3)\r\n    },\r\n    '&:active': {\r\n      background:\r\n        theme.palette.type === 'light'\r\n          ? hexToRgba(SFGrey[200], 0.5)\r\n          : hexToRgba(SFGrey[500], 0.2)\r\n    },\r\n    '&.Mui-selected': {\r\n      background:\r\n        theme.palette.type === 'light'\r\n          ? hexToRgba(SFGrey[200], 0.5)\r\n          : hexToRgba(SFGrey[500], 0.2),\r\n      '&:hover': {\r\n        background:\r\n          theme.palette.type === 'light'\r\n            ? hexToRgba(SFGrey[200], 0.3)\r\n            : hexToRgba(SFGrey[500], 0.3)\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n\r\nconst useMenuStyles = makeStyles({\r\n  paper: {\r\n    marginTop: '63px',\r\n    borderRadius: '0px 0px 2px 2px'\r\n  }\r\n});\r\n\r\nexport interface SFMultiSelectProps extends SelectProps {\r\n  options: SFMultiSelectOption[];\r\n  defaultValue: string[];\r\n  value?: string[];\r\n  helperText?: React.ReactNode;\r\n}\r\n\r\nexport const SFMultiSelect = ({\r\n  options,\r\n  helperText,\r\n  label,\r\n  defaultValue,\r\n  value,\r\n  onChange,\r\n  ...props\r\n}: SFMultiSelectProps): React.ReactElement<SFMultiSelectProps> => {\r\n  const valueInit: string[] = value || defaultValue;\r\n  const [selected, setSelected] = React.useState<string[]>(valueInit);\r\n  const customMenuStyles: Record<'paper', string> = useMenuStyles();\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<{\r\n      name?: string | undefined;\r\n      value: unknown;\r\n    }>,\r\n    child: React.ReactNode\r\n  ): void => {\r\n    setSelected(event.target.value as string[]);\r\n    if (onChange) {\r\n      onChange(event, child);\r\n    }\r\n  };\r\n\r\n  const renderSelected = (selectedValues: string[]): string => {\r\n    return selectedValues ? selectedValues.join(',') : '';\r\n  };\r\n\r\n  const isChecked = (\r\n    option: SFMultiSelectOption,\r\n    selectedValues: string[]\r\n  ): boolean => {\r\n    return selectedValues && selectedValues.indexOf(option.value) > -1;\r\n  };\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <StyledSelect\r\n        select\r\n        label={label}\r\n        helperText={helperText}\r\n        error={props.error}\r\n        disabled={props.disabled}\r\n        SelectProps={{\r\n          ...props,\r\n          multiple: true,\r\n          defaultValue: defaultValue,\r\n          value: selected,\r\n          MenuProps: {\r\n            variant: 'menu',\r\n            autoFocus: false,\r\n            disableAutoFocusItem: true,\r\n            classes: customMenuStyles\r\n          },\r\n          onChange: handleChange,\r\n          renderValue: renderSelected,\r\n          IconComponent: (props): React.ReactElement => (\r\n            <SFIcon icon='Down-2' size='16' {...props} />\r\n          )\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <StyledMenuItem key={option.value} value={option.value}>\r\n            <SFCheckbox checked={isChecked(option, selected)} />\r\n            <ListItemText primary={option.label} />\r\n          </StyledMenuItem>\r\n        ))}\r\n      </StyledSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport Radio, { RadioProps } from '@material-ui/core/Radio';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { SFFormControlLabel } from '../../SFFormControlLabel/SFFormControlLabel';\r\nimport { SFGrey } from '../../../SFColors/SFColors';\r\n\r\nconst StyledRadio = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: `${theme.palette.type === 'light' ? SFGrey[600] : SFGrey[400]}`\r\n  },\r\n  colorPrimary: {\r\n    '&:hover': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 204, 204, 0.3)'\r\n          : 'rgba(128, 128, 128, 0.3)'\r\n      }`\r\n    },\r\n    '&:active': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 204, 204, 0.5)'\r\n          : 'rgba(128, 128, 128, 0.2)'\r\n      }`\r\n    },\r\n    '&.Mui-checked:hover': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 235, 255, 0.4)'\r\n          : 'rgba(128, 198, 255, 0.2)'\r\n      }`\r\n    },\r\n    '&.Mui-checked:active': {\r\n      backgroundColor: `${\r\n        theme.palette.type === 'light'\r\n          ? 'rgba(204, 235, 255, 0.6)'\r\n          : 'rgba(128, 198, 255, 0.1)'\r\n      }`\r\n    },\r\n    '&.Mui-disabled': {\r\n      color: `${theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]}`\r\n    }\r\n  }\r\n}))(Radio);\r\n\r\nexport interface SFRadioProps extends RadioProps {\r\n  label?: string;\r\n}\r\n\r\nexport const SFRadio = ({\r\n  label,\r\n  ...props\r\n}: SFRadioProps): React.ReactElement<SFRadioProps> => {\r\n  if (label) {\r\n    return (\r\n      <FormControl>\r\n        <SFFormControlLabel\r\n          control={<SFRadio {...props} color='primary' disableRipple />}\r\n          label={label}\r\n          disabled={props.disabled}\r\n        />\r\n      </FormControl>\r\n    );\r\n  }\r\n  return <StyledRadio {...props} color='primary' disableRipple />;\r\n};\r\n","import * as React from 'react';\r\nimport RadioGroup, { RadioGroupProps } from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { SFFormControlLabel } from '../SFFormControlLabel/SFFormControlLabel';\r\nimport { SFRadio } from './SFRadio/SFRadio';\r\n\r\nexport interface SFRadioOptionsProps {\r\n  value: string;\r\n  label: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport interface SFRadioGroupProps extends RadioGroupProps {\r\n  label?: string;\r\n  color?: 'default' | 'primary' | 'secondary' | undefined;\r\n  options: SFRadioOptionsProps[];\r\n}\r\n\r\nexport const SFRadioGroup = ({\r\n  label,\r\n  options,\r\n  ...props\r\n}: SFRadioGroupProps): React.ReactElement<SFRadioGroupProps> => {\r\n  return (\r\n    <FormControl>\r\n      <label>{label}</label>\r\n      <RadioGroup {...props} color='primary'>\r\n        {options.map((opt, i) => {\r\n          return (\r\n            <SFFormControlLabel\r\n              key={`${opt.value}${i}`}\r\n              value={opt.value}\r\n              control={<SFRadio />}\r\n              label={opt.label}\r\n              disabled={opt.disabled}\r\n            />\r\n          );\r\n        })}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { withStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { FormControl, MenuItem, SelectProps } from '@material-ui/core';\r\nimport { SFTextField } from '../SFTextField/SFTextField';\r\nimport { SFIcon } from '../SFIcon/SFIcon';\r\nimport { SFGrey } from '../../SFColors/SFColors';\r\nimport { hexToRgba } from '../../helpers';\r\n\r\nconst StyledSelect = withStyles(() => ({\r\n  root: {\r\n    '& svg': {\r\n      position: 'absolute',\r\n      right: 18,\r\n      pointerEvents: 'none',\r\n      top: 'auto'\r\n    }\r\n  }\r\n}))(SFTextField);\r\n\r\nconst StyledMenuItem = withStyles((theme: Theme) => ({\r\n  root: {\r\n    '&:hover': {\r\n      background:\r\n        theme.palette.type === 'light'\r\n          ? hexToRgba(SFGrey[200], 0.3)\r\n          : hexToRgba(SFGrey[500], 0.3)\r\n    },\r\n    '&:active': {\r\n      background:\r\n        theme.palette.type === 'light'\r\n          ? hexToRgba(SFGrey[200], 0.5)\r\n          : hexToRgba(SFGrey[500], 0.2)\r\n    },\r\n    '&.Mui-selected': {\r\n      background:\r\n        theme.palette.type === 'light'\r\n          ? hexToRgba(SFGrey[200], 0.5)\r\n          : hexToRgba(SFGrey[500], 0.2),\r\n      '&:hover': {\r\n        background:\r\n          theme.palette.type === 'light'\r\n            ? hexToRgba(SFGrey[200], 0.3)\r\n            : hexToRgba(SFGrey[500], 0.3)\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n\r\nconst useMenuStyles = makeStyles({\r\n  paper: {\r\n    marginTop: '54px',\r\n    borderRadius: '0px 0px 2px 2px'\r\n  },\r\n  '@media screen and (max-width: 600px)': {\r\n    paper: {\r\n      marginTop: '60px'\r\n    }\r\n  }\r\n});\r\n\r\nexport interface SFSelectOption {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nexport interface SFSelectProps extends SelectProps {\r\n  options: SFSelectOption[];\r\n  value?: string;\r\n  helperText?: React.ReactNode;\r\n}\r\n\r\nexport const SFSelect = ({\r\n  options,\r\n  helperText,\r\n  label,\r\n  ...props\r\n}: SFSelectProps): React.ReactElement<SFSelectProps> => {\r\n  const customMenuStyles: Record<'paper', string> = useMenuStyles();\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <StyledSelect\r\n        select\r\n        label={label}\r\n        helperText={helperText}\r\n        error={props.error}\r\n        disabled={props.disabled}\r\n        SelectProps={{\r\n          ...props,\r\n          IconComponent: (props): React.ReactElement => (\r\n            <SFIcon icon='Down-2' size='16' {...props} />\r\n          ),\r\n          MenuProps: {\r\n            variant: 'menu',\r\n            autoFocus: false,\r\n            disableAutoFocusItem: true,\r\n            classes: customMenuStyles\r\n          }\r\n        }}\r\n      >\r\n        {options.map((option: SFSelectOption, index: number) => (\r\n          <StyledMenuItem key={`option-${index}`} value={option.value}>\r\n            {option.label}\r\n          </StyledMenuItem>\r\n        ))}\r\n      </StyledSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport Switch, { SwitchProps } from '@material-ui/core/Switch';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { SFSurfaceLight, SFSurfaceDark, SFGrey } from '../../SFColors/SFColors';\r\nimport { SFFormControlLabel } from '../SFFormControlLabel/SFFormControlLabel';\r\n\r\nconst StyledSwitch = withStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 64,\r\n    height: 42,\r\n    padding: 13,\r\n    display: 'flex'\r\n  },\r\n  switchBase: {\r\n    left: 3,\r\n    padding: 15,\r\n    color: theme.palette.type === 'light' ? SFGrey[600] : SFGrey[400],\r\n    '& + $track': {\r\n      marginTop: -2\r\n    },\r\n    '&:hover': {\r\n      backgroundColor:\r\n        theme.palette.type === 'light'\r\n          ? `rgba(204, 204, 204, 0.3)`\r\n          : `rgba(128, 128, 128, 0.3)`\r\n    },\r\n    '&:active': {\r\n      backgroundColor:\r\n        theme.palette.type === 'light'\r\n          ? `rgba(204, 204, 204, 0.5)`\r\n          : `rgba(128, 128, 128, 0.2)`\r\n    },\r\n    '&.Mui-disabled': {\r\n      color: theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700],\r\n      '& + $track': {\r\n        opacity: 1,\r\n        backgroundColor: 'transparent',\r\n        borderColor: theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]\r\n      }\r\n    },\r\n    '&.Mui-checked': {\r\n      transform: 'translateX(17px)',\r\n      color: theme.palette.type === 'light' ? SFSurfaceLight : SFSurfaceDark,\r\n      '& + $track': {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.main\r\n      },\r\n      '&:hover': {\r\n        backgroundColor:\r\n          theme.palette.type === 'light'\r\n            ? `rgba(204, 235, 255, 0.4)`\r\n            : `rgba(128, 198, 255, 0.2)`\r\n      },\r\n      '&:active': {\r\n        backgroundColor:\r\n          theme.palette.type === 'light'\r\n            ? `rgba(204, 235, 255, 0.6)`\r\n            : `rgba(128, 198, 255, 0.1)`\r\n      },\r\n      '&.Mui-disabled': {\r\n        color: theme.palette.type === 'light' ? SFSurfaceLight : SFSurfaceDark,\r\n        '& + $track': {\r\n          opacity: 1,\r\n          backgroundColor:\r\n            theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700],\r\n          borderColor:\r\n            theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: 'none'\r\n  },\r\n  track: {\r\n    border: `2px solid ${theme.palette.grey[600]}`,\r\n    borderRadius: 10,\r\n    opacity: 1,\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? SFSurfaceLight : SFSurfaceDark\r\n  }\r\n}))(Switch);\r\n\r\nexport interface SFSwitchProps extends SwitchProps {\r\n  label?: string;\r\n}\r\n\r\nexport const SFSwitch = ({\r\n  disableRipple = true,\r\n  color,\r\n  label,\r\n  ...props\r\n}: SFSwitchProps): React.ReactElement<SFSwitchProps> => {\r\n  color = 'primary';\r\n  return (\r\n    <FormControl>\r\n      <SFFormControlLabel\r\n        control={\r\n          <StyledSwitch\r\n            color={color}\r\n            disableRipple={disableRipple}\r\n            {...props}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n","import { ThemeOptions } from '@material-ui/core/styles';\r\n\r\nconst CommonThemeOptions: ThemeOptions = {\r\n  props: {\r\n    MuiButtonBase: {\r\n      disableRipple: true\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 2\r\n  },\r\n  overrides: {\r\n    MuiFormControlLabel: {\r\n      root: {\r\n        marginRight: 0\r\n      }\r\n    },\r\n    MuiIconButton: {\r\n      colorPrimary: {\r\n        '&:hover': {\r\n          borderRadius: '50%'\r\n        },\r\n        '&:active': {\r\n          borderRadius: '50%'\r\n        }\r\n      }\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        padding: '4px 10px',\r\n        height: '30px',\r\n        boxSizing: 'border-box'\r\n      },\r\n      label: {\r\n        textTransform: 'none'\r\n      }\r\n    },\r\n    MuiPaper: {\r\n      elevation1: {\r\n        boxShadow:\r\n          '0px 2px 1px -1px rgba(0,0,0,0.02), 0px 1px 1px rgba(0,0,0,0.14), 0px 1px 3px rgba(0,0,0,0.12)'\r\n      },\r\n      elevation2: {\r\n        boxShadow:\r\n          '0px 3px 1px -2px rgba(0, 0, 0, 0.02), 0px 2px 2px rgba(0, 0, 0, 0.14), 0px 1px 5px rgba(0, 0, 0, 0.12)'\r\n      },\r\n      elevation3: {\r\n        boxShadow:\r\n          '0px 3px 3px -2px rgba(0, 0, 0, 0.02), 0px 3px 4px rgba(0, 0, 0, 0.14), 0px 1px 8px rgba(0, 0, 0, 0.12)'\r\n      },\r\n      elevation4: {\r\n        boxShadow:\r\n          '0px 2px 4px -1px rgba(0, 0, 0, 0.02), 0px 4px 5px rgba(0, 0, 0, 0.14), 0px 1px 10px rgba(0, 0, 0, 0.12)'\r\n      },\r\n      elevation6: {\r\n        boxShadow:\r\n          '0px 3px 5px -1px rgba(0, 0, 0, 0.02), 0px 6px 10px rgba(0, 0, 0, 0.14), 0px 1px 18px rgba(0, 0, 0, 0.12)'\r\n      },\r\n      elevation8: {\r\n        boxShadow:\r\n          '0px 5px 5px -3px rgba(0, 0, 0, 0.02), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)'\r\n      },\r\n      elevation9: {\r\n        boxShadow:\r\n          '0px 5px 6px -3px rgba(0, 0, 0, 0.02), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12)'\r\n      },\r\n      elevation12: {\r\n        boxShadow:\r\n          '0px 7px 8px -4px rgba(0, 0, 0, 0.02), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)'\r\n      },\r\n      elevation16: {\r\n        boxShadow:\r\n          '0px 8px 10px -5px rgba(0, 0, 0, 0.02), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12)'\r\n      },\r\n      elevation24: {\r\n        boxShadow:\r\n          '0px 11px 15px -7px rgba(0, 0, 0, 0.02), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12)'\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport { CommonThemeOptions };\r\n","import React, { forwardRef } from 'react';\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  makeStyles,\r\n  createStyles,\r\n  useTheme\r\n} from '@material-ui/core/styles';\r\nimport { Paper, CheckboxProps } from '@material-ui/core';\r\nimport MaterialTable, {\r\n  MTableBodyRow,\r\n  MaterialTableProps,\r\n  Column,\r\n  Options,\r\n  Icons\r\n} from 'material-table';\r\nimport { SFBlue, SFGrey } from '../../SFColors/SFColors';\r\nimport { SFIcon } from '../SFIcon/SFIcon';\r\nimport { hexToRgba } from '../../helpers';\r\n\r\nconst StyledRow = withStyles((theme: Theme) => ({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor:\r\n        theme.palette.type === 'light'\r\n          ? hexToRgba(SFGrey[200], 0.3)\r\n          : hexToRgba(SFGrey[500], 0.3)\r\n    }\r\n  }\r\n}))(MTableBodyRow);\r\n\r\nconst StyledContainer = withStyles({\r\n  root: {\r\n    padding: '24px 24px 34px 24px',\r\n    width: 'auto',\r\n    '& th:not(.MuiTableCell-paddingNone)': {\r\n      padding: 20\r\n    }\r\n  }\r\n})(Paper);\r\n\r\nconst useSelectionStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: `${theme.palette.type === 'light' ? SFGrey[600] : SFGrey[400]}`\r\n    },\r\n    colorSecondary: {\r\n      '&.Mui-checked': {\r\n        color: `${theme.palette.type === 'light' ? SFBlue[500] : SFBlue[200]}`\r\n      },\r\n      '&:hover': {\r\n        backgroundColor:\r\n          theme.palette.type === 'light'\r\n            ? hexToRgba(SFGrey[200], 0.3)\r\n            : hexToRgba(SFGrey[500], 0.3)\r\n      },\r\n      '&:active': {\r\n        backgroundColor:\r\n          theme.palette.type === 'light'\r\n            ? hexToRgba(SFGrey[200], 0.5)\r\n            : hexToRgba(SFGrey[500], 0.2)\r\n      },\r\n      '&.Mui-checked:hover': {\r\n        backgroundColor:\r\n          theme.palette.type === 'light'\r\n            ? hexToRgba(SFBlue[100], 0.4)\r\n            : hexToRgba(SFBlue[200], 0.2)\r\n      },\r\n      '&.Mui-checked:active': {\r\n        backgroundColor:\r\n          theme.palette.type === 'light'\r\n            ? hexToRgba(SFBlue[100], 0.6)\r\n            : hexToRgba(SFBlue[200], 0.1)\r\n      },\r\n      '&.Mui-disabled': {\r\n        color: `${theme.palette.type === 'light' ? SFGrey[200] : SFGrey[700]}`\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst tableIcons: Icons = {\r\n  Export: forwardRef((props, ref: React.Ref<SVGSVGElement>) => (\r\n    <SFIcon icon='Download' {...props} ref={ref} />\r\n  )),\r\n  Filter: forwardRef((props, ref: React.Ref<SVGSVGElement>) => (\r\n    <SFIcon icon='Adjustments' {...props} ref={ref} />\r\n  )),\r\n  SortArrow: forwardRef((props, ref: React.Ref<SVGSVGElement>) => (\r\n    <SFIcon icon='Up-7' {...props} ref={ref} />\r\n  )),\r\n  FirstPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => (\r\n    <SFIcon icon='Left-2' {...props} ref={ref} />\r\n  )),\r\n  LastPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => (\r\n    <SFIcon icon='Right-2' {...props} ref={ref} />\r\n  )),\r\n  NextPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => (\r\n    <SFIcon icon='Right-7' {...props} ref={ref} />\r\n  )),\r\n  PreviousPage: forwardRef((props, ref: React.Ref<SVGSVGElement>) => (\r\n    <SFIcon icon='Left-7' {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref: React.Ref<SVGSVGElement>) => (\r\n    <SFIcon icon='Close' {...props} ref={ref} />\r\n  )),\r\n  Search: forwardRef((props, ref: React.Ref<SVGSVGElement>) => (\r\n    <SFIcon icon='Search' {...props} ref={ref} />\r\n  ))\r\n};\r\n\r\ninterface RowTableData {\r\n  id: number;\r\n  checked: boolean;\r\n}\r\n\r\nexport type RowData = {\r\n  [key: string]: number | string | boolean | undefined;\r\n} & { tableData?: RowTableData };\r\n\r\nexport interface SFTableColumn extends Column<RowData> {}\r\nexport interface SFTableOptions extends Options<RowData> {}\r\nexport interface SFTableProps extends MaterialTableProps<RowData> {\r\n  columns: SFTableColumn[];\r\n  options: SFTableOptions;\r\n}\r\n\r\nexport const SFTable = ({\r\n  columns,\r\n  options,\r\n  ...props\r\n}: SFTableProps): React.ReactElement<SFTableProps> => {\r\n  const theme = useTheme();\r\n\r\n  const iconCheckedColor: string = theme.palette.primary.main;\r\n  const iconUncheckedColor: string =\r\n    theme.palette.type === 'light' ? SFGrey[600] : SFGrey[400];\r\n\r\n  const selectionProps: CheckboxProps = {\r\n    classes: useSelectionStyles(props),\r\n    checkedIcon: (\r\n      <SFIcon icon='Checkbox-Selected' size={42} color={iconCheckedColor} />\r\n    ),\r\n    icon: (\r\n      <SFIcon icon='Checkbox-Unselected' size={42} color={iconUncheckedColor} />\r\n    )\r\n  };\r\n\r\n  const customColumns: SFTableColumn[] = columns.map(\r\n    (column: SFTableColumn) => {\r\n      return {\r\n        ...column,\r\n        cellStyle: {\r\n          padding: 20,\r\n          borderBottom: `1px solid  ${\r\n            theme.palette.type === 'light' ? SFGrey[100] : SFGrey[700]\r\n          }`,\r\n          color: `${theme.palette.type === 'light' ? SFGrey[900] : SFGrey[50]}`,\r\n          fontWeight: 400,\r\n          fontSize: 14\r\n        }\r\n      };\r\n    }\r\n  );\r\n\r\n  const customOptions: SFTableOptions = {\r\n    ...options,\r\n    headerStyle: {\r\n      borderBottom: `2px solid  ${\r\n        theme.palette.type === 'light' ? SFGrey[100] : SFGrey[700]\r\n      }`,\r\n      fontWeight: 600,\r\n      color: `${theme.palette.type === 'light' ? SFGrey[900] : SFGrey[50]}`,\r\n      fontSize: 14\r\n    },\r\n    rowStyle: (rowData: RowData): React.CSSProperties => {\r\n      if (rowData?.tableData?.checked) {\r\n        return {\r\n          backgroundColor:\r\n            theme.palette.type === 'light'\r\n              ? hexToRgba(SFGrey[200], 0.5)\r\n              : hexToRgba(SFGrey[500], 0.2)\r\n        };\r\n      }\r\n      return {};\r\n    },\r\n    selectionProps: {\r\n      ...selectionProps\r\n    },\r\n    headerSelectionProps: {\r\n      indeterminate: false,\r\n      ...selectionProps\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MaterialTable\r\n      {...props}\r\n      icons={tableIcons}\r\n      columns={customColumns}\r\n      options={customOptions}\r\n      components={{\r\n        // eslint-disable-next-line\r\n        Container: (props: any): JSX.Element => <StyledContainer {...props} />,\r\n        // eslint-disable-next-line\r\n        Row: (props: any): JSX.Element => <StyledRow {...props} />\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { CommonThemeOptions } from './CommonThemeOptions';\r\n\r\nimport {\r\n  SFGrey,\r\n  SFBlue,\r\n  SFBlueMainDark,\r\n  SFRedMainDark,\r\n  SFBackgroundDark,\r\n  SFSurfaceDark\r\n} from '../SFColors/SFColors';\r\n\r\nCommonThemeOptions.palette = {\r\n  type: 'dark',\r\n  primary: {\r\n    main: SFBlueMainDark\r\n  },\r\n  secondary: {\r\n    main: SFRedMainDark\r\n  },\r\n  background: {\r\n    default: SFBackgroundDark,\r\n    paper: SFSurfaceDark\r\n  },\r\n  grey: SFGrey,\r\n  // TODO - action prop is work in progress\r\n  action: {\r\n    active: SFGrey[500],\r\n    activatedOpacity: 0.3,\r\n    hover: SFBlue[200],\r\n    hoverOpacity: 0.3,\r\n    selected: SFBlue[200],\r\n    selectedOpacity: 0.1,\r\n    disabled: SFGrey[600],\r\n    disabledBackground: SFGrey[800],\r\n    disabledOpacity: 0.38,\r\n    focus: 'rgba(0, 0, 0, 0.12)',\r\n    focusOpacity: 0.12\r\n  }\r\n};\r\n\r\nconst NightTheme = createMuiTheme(CommonThemeOptions);\r\n\r\nexport { NightTheme };\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { CommonThemeOptions } from './CommonThemeOptions';\r\nimport {\r\n  SFGrey,\r\n  SFBlue,\r\n  SFBlueMainLight,\r\n  SFRedMainLight,\r\n  SFBackgroundLight,\r\n  SFSurfaceLight\r\n} from '../SFColors/SFColors';\r\n\r\nCommonThemeOptions.palette = {\r\n  type: 'light',\r\n  primary: {\r\n    main: SFBlueMainLight\r\n  },\r\n  secondary: {\r\n    main: SFRedMainLight\r\n  },\r\n  background: {\r\n    default: SFBackgroundLight,\r\n    paper: SFSurfaceLight\r\n  },\r\n  grey: SFGrey,\r\n  // TODO - action prop is work in progress\r\n  action: {\r\n    active: SFGrey[200],\r\n    activatedOpacity: 0.3,\r\n    hover: SFBlue[100],\r\n    hoverOpacity: 0.04,\r\n    selected: 'rgba(0, 0, 0, 0.08)',\r\n    selectedOpacity: 0.08,\r\n    disabled: 'rgba(0, 0, 0, 0.26)',\r\n    disabledOpacity: 0.38,\r\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\r\n    focus: 'rgba(0, 0, 0, 0.12)',\r\n    focusOpacity: 0.12\r\n  }\r\n};\r\n\r\nconst DayTheme = createMuiTheme(CommonThemeOptions);\r\n\r\nexport { DayTheme };\r\n","import {\r\n  Theme as SFTheme,\r\n  ThemeProvider as SFThemeProvider\r\n} from '@material-ui/core/styles';\r\n\r\nimport { NightTheme } from './NightTheme';\r\nimport { DayTheme } from './DayTheme';\r\n\r\nexport { SFThemeProvider, SFTheme };\r\n\r\nexport type SFThemeType = 'day' | 'night';\r\n\r\nexport function createSFTheme(type: SFThemeType): SFTheme {\r\n  return type === 'day' ? DayTheme : NightTheme;\r\n}\r\n"],"sourceRoot":""}